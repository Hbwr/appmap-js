// source: protos/appmap.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.appmap.AppMap', null, global);
goog.exportSymbol('proto.appmap.AppMapMetadata', null, global);
goog.exportSymbol('proto.appmap.CancelIndexResult', null, global);
goog.exportSymbol('proto.appmap.CreateIndex', null, global);
goog.exportSymbol('proto.appmap.DependsParams', null, global);
goog.exportSymbol('proto.appmap.Index', null, global);
goog.exportSymbol('proto.appmap.IndexEvent', null, global);
goog.exportSymbol('proto.appmap.IndexEvent.EventName', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.DependsParams = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.appmap.DependsParams.repeatedFields_,
    null
  );
};
goog.inherits(proto.appmap.DependsParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.DependsParams.displayName = 'proto.appmap.DependsParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.CreateIndex = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appmap.CreateIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.CreateIndex.displayName = 'proto.appmap.CreateIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.Index = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appmap.Index, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.Index.displayName = 'proto.appmap.Index';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.IndexEvent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appmap.IndexEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.IndexEvent.displayName = 'proto.appmap.IndexEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.CancelIndexResult = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appmap.CancelIndexResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.CancelIndexResult.displayName = 'proto.appmap.CancelIndexResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.AppMap = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appmap.AppMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.AppMap.displayName = 'proto.appmap.AppMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appmap.AppMapMetadata = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appmap.AppMapMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appmap.AppMapMetadata.displayName = 'proto.appmap.AppMapMetadata';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.appmap.DependsParams.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.DependsParams.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.appmap.DependsParams.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.DependsParams} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.DependsParams.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        index:
          (f = msg.getIndex()) &&
          proto.appmap.Index.toObject(includeInstance, f),
        filesList:
          (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
        useModifiedTime: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.DependsParams}
 */
proto.appmap.DependsParams.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.DependsParams();
  return proto.appmap.DependsParams.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.DependsParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.DependsParams}
 */
proto.appmap.DependsParams.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.appmap.Index();
        reader.readMessage(
          value,
          proto.appmap.Index.deserializeBinaryFromReader
        );
        msg.setIndex(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addFiles(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setUseModifiedTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.DependsParams.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.DependsParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.DependsParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.DependsParams.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(1, f, proto.appmap.Index.serializeBinaryToWriter);
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
  f = message.getUseModifiedTime();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional Index index = 1;
 * @return {?proto.appmap.Index}
 */
proto.appmap.DependsParams.prototype.getIndex = function () {
  return /** @type{?proto.appmap.Index} */ (jspb.Message.getWrapperField(
    this,
    proto.appmap.Index,
    1
  ));
};

/**
 * @param {?proto.appmap.Index|undefined} value
 * @return {!proto.appmap.DependsParams} returns this
 */
proto.appmap.DependsParams.prototype.setIndex = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.appmap.DependsParams} returns this
 */
proto.appmap.DependsParams.prototype.clearIndex = function () {
  return this.setIndex(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appmap.DependsParams.prototype.hasIndex = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated string files = 2;
 * @return {!Array<string>}
 */
proto.appmap.DependsParams.prototype.getFilesList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.appmap.DependsParams} returns this
 */
proto.appmap.DependsParams.prototype.setFilesList = function (value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.appmap.DependsParams} returns this
 */
proto.appmap.DependsParams.prototype.addFiles = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.appmap.DependsParams} returns this
 */
proto.appmap.DependsParams.prototype.clearFilesList = function () {
  return this.setFilesList([]);
};

/**
 * optional bool use_modified_time = 3;
 * @return {boolean}
 */
proto.appmap.DependsParams.prototype.getUseModifiedTime = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(
    this,
    3,
    false
  ));
};

/**
 * @param {boolean} value
 * @return {!proto.appmap.DependsParams} returns this
 */
proto.appmap.DependsParams.prototype.setUseModifiedTime = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.CreateIndex.prototype.toObject = function (opt_includeInstance) {
    return proto.appmap.CreateIndex.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.CreateIndex} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.CreateIndex.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        appMapDir: jspb.Message.getFieldWithDefault(msg, 1, ''),
        baseDir: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.CreateIndex}
 */
proto.appmap.CreateIndex.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.CreateIndex();
  return proto.appmap.CreateIndex.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.CreateIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.CreateIndex}
 */
proto.appmap.CreateIndex.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAppMapDir(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setBaseDir(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.CreateIndex.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.CreateIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.CreateIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.CreateIndex.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getAppMapDir();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getBaseDir();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string app_map_dir = 1;
 * @return {string}
 */
proto.appmap.CreateIndex.prototype.getAppMapDir = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.appmap.CreateIndex} returns this
 */
proto.appmap.CreateIndex.prototype.setAppMapDir = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string base_dir = 2;
 * @return {string}
 */
proto.appmap.CreateIndex.prototype.getBaseDir = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.appmap.CreateIndex} returns this
 */
proto.appmap.CreateIndex.prototype.setBaseDir = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.Index.prototype.toObject = function (opt_includeInstance) {
    return proto.appmap.Index.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.Index} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.Index.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        handle: jspb.Message.getFieldWithDefault(msg, 1, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.Index}
 */
proto.appmap.Index.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.Index();
  return proto.appmap.Index.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.Index} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.Index}
 */
proto.appmap.Index.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setHandle(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.Index.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.Index.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.Index} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.Index.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string handle = 1;
 * @return {string}
 */
proto.appmap.Index.prototype.getHandle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.appmap.Index} returns this
 */
proto.appmap.Index.prototype.setHandle = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.IndexEvent.prototype.toObject = function (opt_includeInstance) {
    return proto.appmap.IndexEvent.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.IndexEvent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.IndexEvent.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        event: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.IndexEvent}
 */
proto.appmap.IndexEvent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.IndexEvent();
  return proto.appmap.IndexEvent.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.IndexEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.IndexEvent}
 */
proto.appmap.IndexEvent.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.appmap.IndexEvent.EventName} */ (reader.readEnum());
        msg.setEvent(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.IndexEvent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.IndexEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.IndexEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.IndexEvent.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
};

/**
 * @enum {number}
 */
proto.appmap.IndexEvent.EventName = {
  ADDED: 0,
  REMOVED: 1,
  CHANGED: 2,
};

/**
 * optional EventName event = 1;
 * @return {!proto.appmap.IndexEvent.EventName}
 */
proto.appmap.IndexEvent.prototype.getEvent = function () {
  return /** @type {!proto.appmap.IndexEvent.EventName} */ (jspb.Message.getFieldWithDefault(
    this,
    1,
    0
  ));
};

/**
 * @param {!proto.appmap.IndexEvent.EventName} value
 * @return {!proto.appmap.IndexEvent} returns this
 */
proto.appmap.IndexEvent.prototype.setEvent = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.CancelIndexResult.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.appmap.CancelIndexResult.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.CancelIndexResult} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.CancelIndexResult.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.CancelIndexResult}
 */
proto.appmap.CancelIndexResult.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.CancelIndexResult();
  return proto.appmap.CancelIndexResult.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.CancelIndexResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.CancelIndexResult}
 */
proto.appmap.CancelIndexResult.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.CancelIndexResult.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.CancelIndexResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.CancelIndexResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.CancelIndexResult.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.AppMap.prototype.toObject = function (opt_includeInstance) {
    return proto.appmap.AppMap.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.AppMap} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.AppMap.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        fileName: jspb.Message.getFieldWithDefault(msg, 1, ''),
        metadata:
          (f = msg.getMetadata()) &&
          proto.appmap.AppMapMetadata.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.AppMap}
 */
proto.appmap.AppMap.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.AppMap();
  return proto.appmap.AppMap.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.AppMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.AppMap}
 */
proto.appmap.AppMap.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setFileName(value);
        break;
      case 2:
        var value = new proto.appmap.AppMapMetadata();
        reader.readMessage(
          value,
          proto.appmap.AppMapMetadata.deserializeBinaryFromReader
        );
        msg.setMetadata(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.AppMap.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.AppMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.AppMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.AppMap.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.appmap.AppMapMetadata.serializeBinaryToWriter
    );
  }
};

/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.appmap.AppMap.prototype.getFileName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.appmap.AppMap} returns this
 */
proto.appmap.AppMap.prototype.setFileName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional AppMapMetadata metadata = 2;
 * @return {?proto.appmap.AppMapMetadata}
 */
proto.appmap.AppMap.prototype.getMetadata = function () {
  return /** @type{?proto.appmap.AppMapMetadata} */ (jspb.Message.getWrapperField(
    this,
    proto.appmap.AppMapMetadata,
    2
  ));
};

/**
 * @param {?proto.appmap.AppMapMetadata|undefined} value
 * @return {!proto.appmap.AppMap} returns this
 */
proto.appmap.AppMap.prototype.setMetadata = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.appmap.AppMap} returns this
 */
proto.appmap.AppMap.prototype.clearMetadata = function () {
  return this.setMetadata(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appmap.AppMap.prototype.hasMetadata = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.appmap.AppMapMetadata.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.appmap.AppMapMetadata.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.appmap.AppMapMetadata} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.appmap.AppMapMetadata.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
        sourceLocation: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appmap.AppMapMetadata}
 */
proto.appmap.AppMapMetadata.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appmap.AppMapMetadata();
  return proto.appmap.AppMapMetadata.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appmap.AppMapMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appmap.AppMapMetadata}
 */
proto.appmap.AppMapMetadata.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSourceLocation(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appmap.AppMapMetadata.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.appmap.AppMapMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appmap.AppMapMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appmap.AppMapMetadata.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSourceLocation();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.appmap.AppMapMetadata.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.appmap.AppMapMetadata} returns this
 */
proto.appmap.AppMapMetadata.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string source_location = 2;
 * @return {string}
 */
proto.appmap.AppMapMetadata.prototype.getSourceLocation = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.appmap.AppMapMetadata} returns this
 */
proto.appmap.AppMapMetadata.prototype.setSourceLocation = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

goog.object.extend(exports, proto.appmap);
