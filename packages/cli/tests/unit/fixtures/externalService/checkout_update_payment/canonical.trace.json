[
  {
    "kind": "http_server_request",
    "route": "PATCH /checkout/update/{state}",
    "parameter_names": [
      "_method",
      "authenticity_token",
      "order",
      "payment_source",
      "controller",
      "action",
      "state"
    ],
    "status_code": 302,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": ["mvc.controller"],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": ["mvc.before_action"],
            "children": [
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": ["http.session.read"],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": ["http.session.write"]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": ["crypto.decrypt"]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": ["crypto.set_key"]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": ["crypto.set_iv"]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": ["crypto.set_auth_tag"]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": ["crypto.set_auth_data"]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": ["crypto.final"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack",
                "labels": ["string.unpack"]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": ["mvc.before_action"],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                "labels": ["crypto.secure_compare"],
                "children": [
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": ["string.unpack"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/monkey_patches/spree/Spree::SolidusDemoUser.solidus_demo_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_roles\".* FROM \"spree_roles\" WHERE \"spree_roles\".\"sample_indicator_id\" IS ? AND \"spree_roles\".\"name\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_roles"],
                          "columns": [
                            "spree_roles.*",
                            "spree_roles.name",
                            "spree_roles.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE \"spree_sample_changes\".\"sample_indicator_id\" IS ? AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"]
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::Auth#set_guest_token",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                    "labels": ["crypto.secure_compare"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": ["string.unpack"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree.i18n_available_locales",
                "labels": []
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Preferences::Preferable#get_preference",
                "labels": []
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]=",
                "labels": ["http.session.write"]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::Order#current_order",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Core::ControllerHelpers::Pricing#current_pricing_options",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_stores\".* FROM \"spree_stores\" WHERE (\"spree_stores\".\"sample_indicator_id\" = $? OR \"spree_stores\".\"sample_indicator_id\" IS ?) AND (\"spree_stores\".\"url\" = $? OR \"spree_stores\".\"default\" = $?) ORDER BY \"spree_stores\".\"default\" ASC LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_stores"],
                              "columns": [
                                "spree_stores.*",
                                "spree_stores.default",
                                "spree_stores.sample_indicator_id",
                                "spree_stores.url"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Preferences::Preferable#get_preference",
                        "labels": []
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                    "labels": ["crypto.secure_compare"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": ["string.unpack"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Core::ControllerHelpers::Store#current_store",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                    "labels": ["crypto.secure_compare"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": ["string.unpack"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_orders\".* FROM \"spree_orders\" WHERE (\"spree_orders\".\"sample_indicator_id\" = $? OR \"spree_orders\".\"sample_indicator_id\" IS ?) AND \"spree_orders\".\"completed_at\" IS ? AND \"spree_orders\".\"currency\" = $? AND \"spree_orders\".\"guest_token\" = $? AND \"spree_orders\".\"store_id\" = $? AND \"spree_orders\".\"user_id\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_orders"],
                          "columns": [
                            "spree_orders.*",
                            "spree_orders.completed_at",
                            "spree_orders.currency",
                            "spree_orders.guest_token",
                            "spree_orders.sample_indicator_id",
                            "spree_orders.store_id",
                            "spree_orders.user_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Core::ControllerHelpers::Order#ip_address",
                    "labels": []
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/models/Current#token",
            "labels": []
          },
          {
            "kind": "function",
            "function": "solidus_core/Spree::Preferences::Preferable#get_preference",
            "labels": []
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "DELETE FROM \"spree_order_mutexes\" WHERE (\"spree_order_mutexes\".\"sample_indicator_id\" = $? OR \"spree_order_mutexes\".\"sample_indicator_id\" IS ?) AND \"spree_order_mutexes\".\"created_at\" <= ? AND \"spree_order_mutexes\".\"order_id\" = $?"
            },
            "analyzed_query": {
              "actions": ["delete"],
              "tables": ["spree_order_mutexes"],
              "columns": [
                "spree_order_mutexes.created_at",
                "spree_order_mutexes.order_id",
                "spree_order_mutexes.sample_indicator_id"
              ],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "app/models/Current#token",
            "labels": []
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": ["mvc.before_action"]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": ["mvc.before_action"],
            "children": [
              {
                "kind": "function",
                "function": "app/models/spree/Spree::BaseDecorator#set_token",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "BEGIN"
            },
            "analyzed_query": {
              "actions": [],
              "tables": [],
              "columns": [],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "INSERT INTO \"spree_order_mutexes\" (\"order_id\", \"created_at\", \"sample_indicator_id\") VALUES ($?, $?, $?) RETURNING \"id\""
            },
            "analyzed_query": {
              "actions": ["insert"],
              "tables": ["spree_order_mutexes"],
              "columns": ["created_at", "id", "order_id", "sample_indicator_id"],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": ["mvc.after_action"]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": ["mvc.after_action"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "COMMIT"
            },
            "analyzed_query": {
              "actions": [],
              "tables": [],
              "columns": [],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": ["mvc.before_action"],
            "children": [
              {
                "kind": "function",
                "function": "solidus_core/Spree::Order::Checkout#can_go_to_state?",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "SELECT COUNT(*) FROM \"spree_line_items\" WHERE (\"spree_line_items\".\"sample_indicator_id\" = $? OR \"spree_line_items\".\"sample_indicator_id\" IS ?) AND \"spree_line_items\".\"order_id\" = $?"
                },
                "analyzed_query": {
                  "actions": ["select"],
                  "tables": ["spree_line_items"],
                  "columns": [
                    "*",
                    "spree_line_items.order_id",
                    "spree_line_items.sample_indicator_id"
                  ],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Order#insufficient_stock_lines",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_line_items\".* FROM \"spree_line_items\" WHERE (\"spree_line_items\".\"sample_indicator_id\" = $? OR \"spree_line_items\".\"sample_indicator_id\" IS ?) AND \"spree_line_items\".\"order_id\" = $? ORDER BY \"spree_line_items\".\"created_at\" ASC, \"spree_line_items\".\"id\" ASC"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_line_items"],
                          "columns": [
                            "spree_line_items.*",
                            "spree_line_items.created_at",
                            "spree_line_items.id",
                            "spree_line_items.order_id",
                            "spree_line_items.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::LineItem#insufficient_stock?",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_variants\".* FROM \"spree_variants\" WHERE (\"spree_variants\".\"sample_indicator_id\" = $? OR \"spree_variants\".\"sample_indicator_id\" IS ?) AND \"spree_variants\".\"id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_variants"],
                              "columns": [
                                "spree_variants.*",
                                "spree_variants.id",
                                "spree_variants.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Stock::Quantifier#can_supply?",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT SUM(\"spree_stock_items\".\"count_on_hand\") FROM \"spree_stock_items\" INNER JOIN \"spree_stock_locations\" ON (\"spree_stock_locations\".\"sample_indicator_id\" = $? OR \"spree_stock_locations\".\"sample_indicator_id\" IS ?) AND \"spree_stock_locations\".\"id\" = \"spree_stock_items\".\"stock_location_id\" WHERE \"spree_stock_items\".\"deleted_at\" IS ? AND \"spree_stock_items\".\"variant_id\" = $? AND (\"spree_stock_locations\".\"sample_indicator_id\" = $? OR \"spree_stock_locations\".\"sample_indicator_id\" IS ?) AND \"spree_stock_locations\".\"active\" = $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_stock_items", "spree_stock_locations"],
                              "columns": [
                                "spree_stock_items.count_on_hand",
                                "spree_stock_items.deleted_at",
                                "spree_stock_items.stock_location_id",
                                "spree_stock_items.variant_id",
                                "spree_stock_locations.active",
                                "spree_stock_locations.id",
                                "spree_stock_locations.sample_indicator_id"
                              ],
                              "joinCount": 1
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Order::Checkout#has_checkout_step?",
                "labels": []
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                "labels": ["crypto.secure_compare"],
                "children": [
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": ["string.unpack"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "activerecord/ActiveRecord::Relation#records",
                "labels": ["dao.materialize"],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"spree_users\".* FROM \"spree_users\" WHERE (\"spree_users\".\"sample_indicator_id\" = $? OR \"spree_users\".\"sample_indicator_id\" IS ?) AND \"spree_users\".\"id\" = $? LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_users"],
                      "columns": [
                        "spree_users.*",
                        "spree_users.id",
                        "spree_users.sample_indicator_id"
                      ],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::Auth#try_spree_current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                    "labels": ["crypto.secure_compare"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": ["string.unpack"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Order#associate_user!",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_users\".* FROM \"spree_users\" WHERE (\"spree_users\".\"sample_indicator_id\" = $? OR \"spree_users\".\"sample_indicator_id\" IS ?) AND \"spree_users\".\"id\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_users"],
                          "columns": [
                            "spree_users.*",
                            "spree_users.id",
                            "spree_users.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "UPDATE \"spree_orders\" SET \"user_id\" = $?, \"email\" = $?, \"created_by_id\" = $? WHERE \"spree_orders\".\"id\" = $?"
                    },
                    "analyzed_query": {
                      "actions": ["update"],
                      "tables": ["spree_orders"],
                      "columns": ["created_by_id", "email", "spree_orders.id", "user_id"],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::Order#current_order",
                "labels": []
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                "labels": ["crypto.secure_compare"],
                "children": [
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": ["string.unpack"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "cancancan/CanCan::ControllerAdditions#authorize!",
                "labels": ["security.authorization"],
                "children": [
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Core::ControllerHelpers::Auth#current_ability",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                        "labels": ["http.session.read"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                        "labels": ["crypto.secure_compare"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "ruby/String#unpack",
                            "labels": ["string.unpack"]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack1",
                        "labels": ["string.unpack"]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Parser#parse",
                        "labels": ["format.json.parse", "deserialize.safe"]
                      },
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack1",
                        "labels": ["string.unpack"]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Parser#parse",
                        "labels": ["format.json.parse", "deserialize.safe"]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::AppConfiguration#roles",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Core::ClassConstantizer::Set#each",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::PermissionSets::Base#can",
                        "labels": []
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "activerecord/ActiveRecord::Relation#records",
                "labels": ["dao.materialize"],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"spree_shipments\".* FROM \"spree_shipments\" WHERE (\"spree_shipments\".\"sample_indicator_id\" = $? OR \"spree_shipments\".\"sample_indicator_id\" IS ?) AND \"spree_shipments\".\"order_id\" = $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_shipments"],
                      "columns": [
                        "spree_shipments.*",
                        "spree_shipments.order_id",
                        "spree_shipments.sample_indicator_id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_sample_changes"],
                              "columns": [
                                "spree_sample_changes.*",
                                "spree_sample_changes.changeable_id",
                                "spree_sample_changes.changeable_type",
                                "spree_sample_changes.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Shipment#to_package",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_stock_locations\".* FROM \"spree_stock_locations\" WHERE (\"spree_stock_locations\".\"sample_indicator_id\" = $? OR \"spree_stock_locations\".\"sample_indicator_id\" IS ?) AND \"spree_stock_locations\".\"id\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_stock_locations"],
                          "columns": [
                            "spree_stock_locations.*",
                            "spree_stock_locations.id",
                            "spree_stock_locations.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_inventory_units\".* FROM \"spree_inventory_units\" INNER JOIN \"spree_variants\" ON (\"spree_variants\".\"sample_indicator_id\" = $? OR \"spree_variants\".\"sample_indicator_id\" IS ?) AND \"spree_variants\".\"id\" = \"spree_inventory_units\".\"variant_id\" WHERE (\"spree_inventory_units\".\"sample_indicator_id\" = $? OR \"spree_inventory_units\".\"sample_indicator_id\" IS ?) AND \"spree_inventory_units\".\"shipment_id\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_inventory_units", "spree_variants"],
                          "columns": [
                            "spree_inventory_units.*",
                            "spree_inventory_units.sample_indicator_id",
                            "spree_inventory_units.shipment_id",
                            "spree_inventory_units.variant_id",
                            "spree_variants.id",
                            "spree_variants.sample_indicator_id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_variants\".* FROM \"spree_variants\" WHERE (\"spree_variants\".\"sample_indicator_id\" = $? OR \"spree_variants\".\"sample_indicator_id\" IS ?) AND \"spree_variants\".\"id\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_variants"],
                          "columns": [
                            "spree_variants.*",
                            "spree_variants.id",
                            "spree_variants.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_products\".* FROM \"spree_products\" WHERE \"spree_products\".\"id\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_products"],
                          "columns": ["spree_products.*", "spree_products.id"],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Stock::Package#add_multiple",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                "labels": ["http.session.read"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                "labels": ["crypto.secure_compare"],
                "children": [
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": ["string.unpack"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "ruby/String#unpack1",
                "labels": ["string.unpack"]
              },
              {
                "kind": "function",
                "function": "json/JSON::Ext::Parser#parse",
                "labels": ["format.json.parse", "deserialize.safe"]
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::Auth#try_spree_current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                    "labels": ["crypto.secure_compare"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": ["string.unpack"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::Auth#try_spree_current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": ["http.session.read"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::SecurityUtils.secure_compare",
                    "labels": ["crypto.secure_compare"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": ["string.unpack"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": ["string.unpack"]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": ["format.json.parse", "deserialize.safe"]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::UserMethods#wallet",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "activerecord/ActiveRecord::Relation#records",
                "labels": ["dao.materialize"],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"spree_wallet_payment_sources\".* FROM \"spree_wallet_payment_sources\" WHERE (\"spree_wallet_payment_sources\".\"sample_indicator_id\" = $? OR \"spree_wallet_payment_sources\".\"sample_indicator_id\" IS ?) AND \"spree_wallet_payment_sources\".\"user_id\" = $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_wallet_payment_sources"],
                      "columns": [
                        "spree_wallet_payment_sources.*",
                        "spree_wallet_payment_sources.sample_indicator_id",
                        "spree_wallet_payment_sources.user_id"
                      ],
                      "joinCount": 0
                    }
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "solidus_starter_frontend/Spree::CheckoutController#update",
            "labels": [],
            "children": [
              {
                "kind": "function",
                "function": "solidus_core/Spree::Core::ControllerHelpers::PaymentParameters#move_payment_source_into_payments_attributes",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "activerecord/ActiveRecord::Relation#records",
                "labels": ["dao.materialize"],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"spree_stores\".* FROM \"spree_stores\" WHERE (\"spree_stores\".\"sample_indicator_id\" = $? OR \"spree_stores\".\"sample_indicator_id\" IS ?) AND \"spree_stores\".\"id\" = $? LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_stores"],
                      "columns": [
                        "spree_stores.*",
                        "spree_stores.id",
                        "spree_stores.sample_indicator_id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_sample_changes"],
                              "columns": [
                                "spree_sample_changes.*",
                                "spree_sample_changes.changeable_id",
                                "spree_sample_changes.changeable_type",
                                "spree_sample_changes.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "SELECT ? AS one FROM \"spree_payment_methods\" INNER JOIN \"spree_store_payment_methods\" ON \"spree_payment_methods\".\"id\" = \"spree_store_payment_methods\".\"payment_method_id\" WHERE \"spree_payment_methods\".\"deleted_at\" IS ? AND (\"spree_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_payment_methods\".\"sample_indicator_id\" IS ?) AND (\"spree_store_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_store_payment_methods\".\"sample_indicator_id\" IS ?) AND \"spree_store_payment_methods\".\"store_id\" = $? LIMIT $?"
                },
                "analyzed_query": {
                  "actions": ["select"],
                  "tables": ["spree_payment_methods", "spree_store_payment_methods"],
                  "columns": [
                    "spree_payment_methods.deleted_at",
                    "spree_payment_methods.id",
                    "spree_payment_methods.sample_indicator_id",
                    "spree_store_payment_methods.payment_method_id",
                    "spree_store_payment_methods.sample_indicator_id",
                    "spree_store_payment_methods.store_id"
                  ],
                  "joinCount": 1
                }
              },
              {
                "kind": "function",
                "function": "activerecord/ActiveRecord::Relation#records",
                "labels": ["dao.materialize"],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"spree_payment_methods\".* FROM \"spree_payment_methods\" WHERE \"spree_payment_methods\".\"deleted_at\" IS ? AND (\"spree_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_payment_methods\".\"sample_indicator_id\" IS ?) AND \"spree_payment_methods\".\"active\" = $? AND \"spree_payment_methods\".\"available_to_users\" = $? AND \"spree_payment_methods\".\"id\" = $? ORDER BY \"spree_payment_methods\".\"position\" ASC LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_payment_methods"],
                      "columns": [
                        "spree_payment_methods.*",
                        "spree_payment_methods.active",
                        "spree_payment_methods.available_to_users",
                        "spree_payment_methods.deleted_at",
                        "spree_payment_methods.id",
                        "spree_payment_methods.position",
                        "spree_payment_methods.sample_indicator_id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_sample_changes"],
                              "columns": [
                                "spree_sample_changes.*",
                                "spree_sample_changes.changeable_id",
                                "spree_sample_changes.changeable_type",
                                "spree_sample_changes.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_sample_changes"],
                              "columns": [
                                "spree_sample_changes.*",
                                "spree_sample_changes.changeable_id",
                                "spree_sample_changes.changeable_type",
                                "spree_sample_changes.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Preferences::Preferable#default_preferences",
                        "labels": []
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "solidus_stripe/Spree::OrderUpdateAttributesDecorator#assign_payments_attributes",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_payment_methods\".* FROM \"spree_payment_methods\" WHERE \"spree_payment_methods\".\"deleted_at\" IS ? AND (\"spree_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_payment_methods\".\"sample_indicator_id\" IS ?) AND \"spree_payment_methods\".\"id\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_payment_methods"],
                          "columns": [
                            "spree_payment_methods.*",
                            "spree_payment_methods.deleted_at",
                            "spree_payment_methods.id",
                            "spree_payment_methods.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::Preferences::Preferable#default_preferences",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_payments\".* FROM \"spree_payments\" WHERE \"spree_payments\".\"order_id\" = $? AND \"spree_payments\".\"state\" NOT IN ($?, $?, $?) ORDER BY \"spree_payments\".\"created_at\" ASC"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_payments"],
                          "columns": [
                            "spree_payments.*",
                            "spree_payments.created_at",
                            "spree_payments.order_id",
                            "spree_payments.state"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT a.attname\n  FROM (\n         SELECT indrelid, indkey, generate_subscripts(indkey, ?) idx\n           FROM pg_index\n          WHERE indrelid = ?::regclass\n            AND indisprimary\n       ) i\n  JOIN pg_attribute a\n    ON a.attrelid = i.indrelid\n   AND a.attnum = i.indkey[i.idx]\n ORDER BY i.idx\n"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["pg_attribute", "pg_index"],
                          "columns": [
                            "a.attname",
                            "a.attnum",
                            "a.attrelid",
                            "i.idx",
                            "i.indkey",
                            "i.indrelid",
                            "indisprimary",
                            "indkey",
                            "indrelid"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_payment_methods\".* FROM \"spree_payment_methods\" WHERE (\"spree_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_payment_methods\".\"sample_indicator_id\" IS ?) AND \"spree_payment_methods\".\"id\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_payment_methods"],
                          "columns": [
                            "spree_payment_methods.*",
                            "spree_payment_methods.id",
                            "spree_payment_methods.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::Preferences::Preferable#default_preferences",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_payment_methods\".* FROM \"spree_payment_methods\" WHERE (\"spree_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_payment_methods\".\"sample_indicator_id\" IS ?) AND \"spree_payment_methods\".\"id\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_payment_methods"],
                          "columns": [
                            "spree_payment_methods.*",
                            "spree_payment_methods.id",
                            "spree_payment_methods.sample_indicator_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_sample_changes"],
                                  "columns": [
                                    "spree_sample_changes.*",
                                    "spree_sample_changes.changeable_id",
                                    "spree_sample_changes.changeable_type",
                                    "spree_sample_changes.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::Preferences::Preferable#default_preferences",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT a.attname\n  FROM (\n         SELECT indrelid, indkey, generate_subscripts(indkey, ?) idx\n           FROM pg_index\n          WHERE indrelid = ?::regclass\n            AND indisprimary\n       ) i\n  JOIN pg_attribute a\n    ON a.attrelid = i.indrelid\n   AND a.attnum = i.indkey[i.idx]\n ORDER BY i.idx\n"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["pg_attribute", "pg_index"],
                      "columns": [
                        "a.attname",
                        "a.attnum",
                        "a.attrelid",
                        "i.idx",
                        "i.indkey",
                        "i.indrelid",
                        "indisprimary",
                        "indkey",
                        "indrelid"
                      ],
                      "joinCount": 1
                    }
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::CreditCard#number=",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Address#name=",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_addresses\".* FROM \"spree_addresses\" WHERE (\"spree_addresses\".\"sample_indicator_id\" = $? OR \"spree_addresses\".\"sample_indicator_id\" IS ?) AND \"spree_addresses\".\"firstname\" = $? AND \"spree_addresses\".\"lastname\" IS ? AND \"spree_addresses\".\"address1\" = $? AND \"spree_addresses\".\"address2\" = $? AND \"spree_addresses\".\"city\" = $? AND \"spree_addresses\".\"zipcode\" = $? AND \"spree_addresses\".\"phone\" = $? AND \"spree_addresses\".\"state_name\" = $? AND \"spree_addresses\".\"alternative_phone\" = $? AND \"spree_addresses\".\"company\" = $? AND \"spree_addresses\".\"state_id\" = $? AND \"spree_addresses\".\"country_id\" = $? AND \"spree_addresses\".\"sample_indicator_id\" IS ? AND \"spree_addresses\".\"name\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_addresses"],
                          "columns": [
                            "spree_addresses.*",
                            "spree_addresses.address1",
                            "spree_addresses.address2",
                            "spree_addresses.alternative_phone",
                            "spree_addresses.city",
                            "spree_addresses.company",
                            "spree_addresses.country_id",
                            "spree_addresses.firstname",
                            "spree_addresses.lastname",
                            "spree_addresses.name",
                            "spree_addresses.phone",
                            "spree_addresses.sample_indicator_id",
                            "spree_addresses.state_id",
                            "spree_addresses.state_name",
                            "spree_addresses.zipcode"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Address#name=",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "solidus_core/Spree::Address#require_zipcode?",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "solidus_paypal_commerce_platform/SolidusPaypalCommercePlatform::Spree::AddressDecorator#require_phone?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "solidus_core/Spree::Address#require_phone?",
                                    "labels": []
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "BEGIN"
                                    },
                                    "analyzed_query": {
                                      "actions": [],
                                      "tables": [],
                                      "columns": [],
                                      "joinCount": 0
                                    }
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_countries\".* FROM \"spree_countries\" WHERE (\"spree_countries\".\"sample_indicator_id\" = $? OR \"spree_countries\".\"sample_indicator_id\" IS ?) AND \"spree_countries\".\"id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_countries"],
                                      "columns": [
                                        "spree_countries.*",
                                        "spree_countries.id",
                                        "spree_countries.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                    "labels": ["mvc.before_action"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                    "labels": ["mvc.after_action"],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "app/models/Current#token",
                                        "labels": []
                                      },
                                      {
                                        "kind": "function",
                                        "function": "activerecord/ActiveRecord::Relation#records",
                                        "labels": ["dao.materialize"],
                                        "children": [
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "sql",
                                            "sql": {
                                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                            },
                                            "analyzed_query": {
                                              "actions": ["select"],
                                              "tables": ["spree_sample_changes"],
                                              "columns": [
                                                "spree_sample_changes.*",
                                                "spree_sample_changes.changeable_id",
                                                "spree_sample_changes.changeable_type",
                                                "spree_sample_changes.sample_indicator_id"
                                              ],
                                              "joinCount": 0
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "solidus_core/Spree::Preferences::Preferable#get_preference",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_states\".* FROM \"spree_states\" WHERE (\"spree_states\".\"sample_indicator_id\" = $? OR \"spree_states\".\"sample_indicator_id\" IS ?) AND \"spree_states\".\"id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_states"],
                                      "columns": [
                                        "spree_states.*",
                                        "spree_states.id",
                                        "spree_states.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                    "labels": ["mvc.before_action"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                    "labels": ["mvc.after_action"],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "app/models/Current#token",
                                        "labels": []
                                      },
                                      {
                                        "kind": "function",
                                        "function": "activerecord/ActiveRecord::Relation#records",
                                        "labels": ["dao.materialize"],
                                        "children": [
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "sql",
                                            "sql": {
                                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                            },
                                            "analyzed_query": {
                                              "actions": ["select"],
                                              "tables": ["spree_sample_changes"],
                                              "columns": [
                                                "spree_sample_changes.*",
                                                "spree_sample_changes.changeable_id",
                                                "spree_sample_changes.changeable_type",
                                                "spree_sample_changes.sample_indicator_id"
                                              ],
                                              "joinCount": 0
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_countries\".* FROM \"spree_countries\" WHERE (\"spree_countries\".\"sample_indicator_id\" = $? OR \"spree_countries\".\"sample_indicator_id\" IS ?) AND \"spree_countries\".\"id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_countries"],
                                      "columns": [
                                        "spree_countries.*",
                                        "spree_countries.id",
                                        "spree_countries.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                    "labels": ["mvc.before_action"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                    "labels": ["mvc.after_action"],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "app/models/Current#token",
                                        "labels": []
                                      },
                                      {
                                        "kind": "function",
                                        "function": "activerecord/ActiveRecord::Relation#records",
                                        "labels": ["dao.materialize"],
                                        "children": [
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "function",
                                            "function": "logger/Logger::LogDevice#write",
                                            "labels": ["log"]
                                          },
                                          {
                                            "kind": "sql",
                                            "sql": {
                                              "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                            },
                                            "analyzed_query": {
                                              "actions": ["select"],
                                              "tables": ["spree_sample_changes"],
                                              "columns": [
                                                "spree_sample_changes.*",
                                                "spree_sample_changes.changeable_id",
                                                "spree_sample_changes.changeable_type",
                                                "spree_sample_changes.sample_indicator_id"
                                              ],
                                              "joinCount": 0
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT ? AS one FROM \"spree_states\" WHERE (\"spree_states\".\"sample_indicator_id\" = $? OR \"spree_states\".\"sample_indicator_id\" IS ?) AND \"spree_states\".\"country_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_states"],
                                  "columns": [
                                    "spree_states.country_id",
                                    "spree_states.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::CreditCard#has_payment_profile?",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::EmailValidator#validate_each",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT ? AS one FROM \"spree_orders\" WHERE \"spree_orders\".\"number\" = $? AND \"spree_orders\".\"id\" != $? LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_orders"],
                      "columns": ["spree_orders.id", "spree_orders.number"],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"spree_roles_users\" WHERE \"spree_roles_users\".\"role_id\" = $? AND \"spree_roles_users\".\"user_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_roles_users"],
                              "columns": ["spree_roles_users.role_id", "spree_roles_users.user_id"],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"spree_roles\" WHERE \"spree_roles\".\"name\" = $? AND \"spree_roles\".\"id\" != $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_roles"],
                              "columns": ["spree_roles.id", "spree_roles.name"],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/spree/Spree::BaseDecorator#restore_changes",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "solidus_core/Spree::Address#require_zipcode?",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "solidus_paypal_commerce_platform/SolidusPaypalCommercePlatform::Spree::AddressDecorator#require_phone?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "solidus_core/Spree::Address#require_phone?",
                                    "labels": []
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT ? AS one FROM \"spree_states\" WHERE (\"spree_states\".\"sample_indicator_id\" = $? OR \"spree_states\".\"sample_indicator_id\" IS ?) AND \"spree_states\".\"country_id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_states"],
                                  "columns": [
                                    "spree_states.country_id",
                                    "spree_states.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::CreditCard#has_payment_profile?",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT ? AS one FROM \"spree_roles_users\" WHERE \"spree_roles_users\".\"role_id\" = $? AND \"spree_roles_users\".\"user_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_roles_users"],
                                      "columns": [
                                        "spree_roles_users.role_id",
                                        "spree_roles_users.user_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT ? AS one FROM \"spree_roles\" WHERE \"spree_roles\".\"name\" = $? AND \"spree_roles\".\"id\" != $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_roles"],
                                      "columns": ["spree_roles.id", "spree_roles.name"],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "solidus_core/Spree::Address#set_name_from_firstname_and_lastname",
                                "labels": []
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/spree/Spree::BaseDecorator#set_token",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/models/Current#token",
                                    "labels": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "INSERT INTO \"spree_addresses\" (\"firstname\", \"address1\", \"address2\", \"city\", \"zipcode\", \"phone\", \"alternative_phone\", \"company\", \"state_id\", \"country_id\", \"created_at\", \"updated_at\", \"sample_indicator_id\", \"name\") VALUES ($?, $?, $?, $?, $?, $?, $?, $?, $?, $?, $?, $?, $?, $?) RETURNING \"id\""
                            },
                            "analyzed_query": {
                              "actions": ["insert"],
                              "tables": ["spree_addresses"],
                              "columns": [
                                "address1",
                                "address2",
                                "alternative_phone",
                                "city",
                                "company",
                                "country_id",
                                "created_at",
                                "firstname",
                                "id",
                                "name",
                                "phone",
                                "sample_indicator_id",
                                "state_id",
                                "updated_at",
                                "zipcode"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::CreditCard#set_last_digits",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/spree/Spree::BaseDecorator#set_token",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "INSERT INTO \"spree_credit_cards\" (\"month\", \"year\", \"cc_type\", \"last_digits\", \"created_at\", \"updated_at\", \"name\", \"user_id\", \"payment_method_id\", \"address_id\", \"sample_indicator_id\") VALUES ($?, $?, $?, $?, $?, $?, $?, $?, $?, $?, $?) RETURNING \"id\""
                        },
                        "analyzed_query": {
                          "actions": ["insert"],
                          "tables": ["spree_credit_cards"],
                          "columns": [
                            "address_id",
                            "cc_type",
                            "created_at",
                            "id",
                            "last_digits",
                            "month",
                            "name",
                            "payment_method_id",
                            "sample_indicator_id",
                            "updated_at",
                            "user_id",
                            "year"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT ? AS one FROM \"spree_payments\" WHERE \"spree_payments\".\"number\" = $? LIMIT $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_payments"],
                          "columns": ["spree_payments.number"],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "app/models/spree/Spree::BaseDecorator#set_token",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "INSERT INTO \"spree_payments\" (\"amount\", \"order_id\", \"source_type\", \"source_id\", \"payment_method_id\", \"state\", \"created_at\", \"updated_at\", \"number\", \"sample_indicator_id\") VALUES ($?, $?, $?, $?, $?, $?, $?, $?, $?, $?) RETURNING \"id\""
                    },
                    "analyzed_query": {
                      "actions": ["insert"],
                      "tables": ["spree_payments"],
                      "columns": [
                        "amount",
                        "created_at",
                        "id",
                        "number",
                        "order_id",
                        "payment_method_id",
                        "sample_indicator_id",
                        "source_id",
                        "source_type",
                        "state",
                        "updated_at"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Payment#store_credit?",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_payments\".* FROM \"spree_payments\" WHERE \"spree_payments\".\"order_id\" = $? ORDER BY \"spree_payments\".\"created_at\" ASC"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_payments"],
                              "columns": [
                                "spree_payments.*",
                                "spree_payments.created_at",
                                "spree_payments.order_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Payment#store_credit?",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_payment_methods\".* FROM \"spree_payment_methods\" WHERE (\"spree_payment_methods\".\"sample_indicator_id\" = $? OR \"spree_payment_methods\".\"sample_indicator_id\" IS ?) AND \"spree_payment_methods\".\"id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_payment_methods"],
                                  "columns": [
                                    "spree_payment_methods.*",
                                    "spree_payment_methods.id",
                                    "spree_payment_methods.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/models/Current#token",
                                    "labels": []
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activerecord/ActiveRecord::Relation#records",
                                    "labels": ["dao.materialize"],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "sql",
                                        "sql": {
                                          "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                        },
                                        "analyzed_query": {
                                          "actions": ["select"],
                                          "tables": ["spree_sample_changes"],
                                          "columns": [
                                            "spree_sample_changes.*",
                                            "spree_sample_changes.changeable_id",
                                            "spree_sample_changes.changeable_type",
                                            "spree_sample_changes.sample_indicator_id"
                                          ],
                                          "joinCount": 0
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "app/models/Current#token",
                                    "labels": []
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activerecord/ActiveRecord::Relation#records",
                                    "labels": ["dao.materialize"],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "sql",
                                        "sql": {
                                          "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                        },
                                        "analyzed_query": {
                                          "actions": ["select"],
                                          "tables": ["spree_sample_changes"],
                                          "columns": [
                                            "spree_sample_changes.*",
                                            "spree_sample_changes.changeable_id",
                                            "spree_sample_changes.changeable_type",
                                            "spree_sample_changes.sample_indicator_id"
                                          ],
                                          "joinCount": 0
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "solidus_core/Spree::Preferences::Preferable#default_preferences",
                                    "labels": []
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/Current#token",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": ["dao.materialize"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": ["log"]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"spree_credit_cards\".* FROM \"spree_credit_cards\" WHERE (\"spree_credit_cards\".\"sample_indicator_id\" = $? OR \"spree_credit_cards\".\"sample_indicator_id\" IS ?) AND \"spree_credit_cards\".\"id\" = $? LIMIT $?"
                                },
                                "analyzed_query": {
                                  "actions": ["select"],
                                  "tables": ["spree_credit_cards"],
                                  "columns": [
                                    "spree_credit_cards.*",
                                    "spree_credit_cards.id",
                                    "spree_credit_cards.sample_indicator_id"
                                  ],
                                  "joinCount": 0
                                }
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/models/Current#token",
                                    "labels": []
                                  },
                                  {
                                    "kind": "function",
                                    "function": "activerecord/ActiveRecord::Relation#records",
                                    "labels": ["dao.materialize"],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "function",
                                        "function": "logger/Logger::LogDevice#write",
                                        "labels": ["log"]
                                      },
                                      {
                                        "kind": "sql",
                                        "sql": {
                                          "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                        },
                                        "analyzed_query": {
                                          "actions": ["select"],
                                          "tables": ["spree_sample_changes"],
                                          "columns": [
                                            "spree_sample_changes.*",
                                            "spree_sample_changes.changeable_id",
                                            "spree_sample_changes.changeable_type",
                                            "spree_sample_changes.sample_indicator_id"
                                          ],
                                          "joinCount": 0
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/spree/Spree::BaseDecorator#restore_changes",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "UPDATE \"spree_payments\" SET \"state\" = $?, \"updated_at\" = $? WHERE \"spree_payments\".\"id\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["update"],
                          "tables": ["spree_payments"],
                          "columns": ["spree_payments.id", "state", "updated_at"],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::Order#completed?",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/spree/Spree::BaseDecorator#set_token",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::StateChange#assign_user",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "INSERT INTO \"spree_state_changes\" (\"name\", \"previous_state\", \"stateful_id\", \"stateful_type\", \"next_state\", \"created_at\", \"updated_at\", \"sample_indicator_id\") VALUES ($?, $?, $?, $?, $?, $?, $?, $?) RETURNING \"id\""
                        },
                        "analyzed_query": {
                          "actions": ["insert"],
                          "tables": ["spree_state_changes"],
                          "columns": [
                            "created_at",
                            "id",
                            "name",
                            "next_state",
                            "previous_state",
                            "sample_indicator_id",
                            "stateful_id",
                            "stateful_type",
                            "updated_at"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Preferences::StaticallyConfigurable#preferences",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_addresses\".* FROM \"spree_addresses\" WHERE (\"spree_addresses\".\"sample_indicator_id\" = $? OR \"spree_addresses\".\"sample_indicator_id\" IS ?) AND \"spree_addresses\".\"id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_addresses"],
                              "columns": [
                                "spree_addresses.*",
                                "spree_addresses.id",
                                "spree_addresses.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_countries\".* FROM \"spree_countries\" WHERE (\"spree_countries\".\"sample_indicator_id\" = $? OR \"spree_countries\".\"sample_indicator_id\" IS ?) AND \"spree_countries\".\"id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_countries"],
                              "columns": [
                                "spree_countries.*",
                                "spree_countries.id",
                                "spree_countries.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": ["dao.materialize"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"spree_states\".* FROM \"spree_states\" WHERE (\"spree_states\".\"sample_indicator_id\" = $? OR \"spree_states\".\"sample_indicator_id\" IS ?) AND \"spree_states\".\"id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_states"],
                              "columns": [
                                "spree_states.*",
                                "spree_states.id",
                                "spree_states.sample_indicator_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": ["dao.materialize"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"spree_sample_changes\".* FROM \"spree_sample_changes\" WHERE (\"spree_sample_changes\".\"sample_indicator_id\" = $? OR \"spree_sample_changes\".\"sample_indicator_id\" IS ?) AND \"spree_sample_changes\".\"changeable_type\" = $? AND \"spree_sample_changes\".\"changeable_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_sample_changes"],
                                      "columns": [
                                        "spree_sample_changes.*",
                                        "spree_sample_changes.changeable_id",
                                        "spree_sample_changes.changeable_type",
                                        "spree_sample_changes.sample_indicator_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Preferences::StaticallyConfigurable#preferences",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activemerchant/ActiveMerchant::Billing::Gateway.inherited",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::CreditCard#verification_value?",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activemerchant/ActiveMerchant::Billing::Gateway#live_url",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Generator::State#generate",
                        "labels": ["format.json.generate", "serialize"]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Generator::State#generate",
                        "labels": ["format.json.generate", "serialize"]
                      },
                      {
                        "kind": "function",
                        "function": "activemerchant/ActiveMerchant::PostsData#ssl_request",
                        "labels": [],
                        "children": [
                          {
                            "kind": "http_client_request",
                            "route": "POST https://api.stripe.com/v1/customers",
                            "parameter_names": null,
                            "status_code": 200
                          },
                          {
                            "kind": "function",
                            "function": "activemerchant/ActiveMerchant::NetworkConnectionRetries.log",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Parser#parse",
                        "labels": ["format.json.parse", "deserialize.safe"]
                      },
                      {
                        "kind": "function",
                        "function": "activemerchant/ActiveMerchant::Billing::AVSResult.messages",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Preferences::StaticallyConfigurable#preferences",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                            "labels": ["mvc.before_action"],
                            "children": [
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT ? AS one FROM \"spree_roles_users\" WHERE \"spree_roles_users\".\"role_id\" = $? AND \"spree_roles_users\".\"user_id\" = $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_roles_users"],
                                      "columns": [
                                        "spree_roles_users.role_id",
                                        "spree_roles_users.user_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                                "labels": ["mvc.before_action"],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": ["log"]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT ? AS one FROM \"spree_roles\" WHERE \"spree_roles\".\"name\" = $? AND \"spree_roles\".\"id\" != $? LIMIT $?"
                                    },
                                    "analyzed_query": {
                                      "actions": ["select"],
                                      "tables": ["spree_roles"],
                                      "columns": ["spree_roles.id", "spree_roles.name"],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"]
                              },
                              {
                                "kind": "function",
                                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                                "labels": ["mvc.after_action"]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                            "labels": ["mvc.after_action"]
                          },
                          {
                            "kind": "function",
                            "function": "solidus_core/Spree::CreditCard#set_last_digits",
                            "labels": []
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/models/spree/Spree::BaseDecorator#restore_changes",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/models/Current#token",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "UPDATE \"spree_credit_cards\" SET \"gateway_customer_profile_id\" = $?, \"gateway_payment_profile_id\" = $?, \"updated_at\" = $? WHERE \"spree_credit_cards\".\"id\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["update"],
                          "tables": ["spree_credit_cards"],
                          "columns": [
                            "gateway_customer_profile_id",
                            "gateway_payment_profile_id",
                            "spree_credit_cards.id",
                            "updated_at"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "solidus_core/Spree::Order#completed?",
                        "labels": []
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "UPDATE \"spree_orders\" SET \"updated_at\" = $? WHERE \"spree_orders\".\"id\" = $?"
                },
                "analyzed_query": {
                  "actions": ["update"],
                  "tables": ["spree_orders"],
                  "columns": ["spree_orders.id", "updated_at"],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "COMMIT"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Order#add_store_credit_payments",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT ? AS one FROM \"spree_payments\" WHERE \"spree_payments\".\"order_id\" = $? AND \"spree_payments\".\"source_type\" = $? AND \"spree_payments\".\"state\" = $? LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_payments"],
                      "columns": [
                        "spree_payments.order_id",
                        "spree_payments.source_type",
                        "spree_payments.state"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::Order#currency",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/models/Current#token",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": ["dao.materialize"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": ["log"]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"spree_store_credits\".* FROM \"spree_store_credits\" WHERE (\"spree_store_credits\".\"sample_indicator_id\" = $? OR \"spree_store_credits\".\"sample_indicator_id\" IS ?) AND \"spree_store_credits\".\"deleted_at\" IS ? AND \"spree_store_credits\".\"user_id\" = $?"
                        },
                        "analyzed_query": {
                          "actions": ["select"],
                          "tables": ["spree_store_credits"],
                          "columns": [
                            "spree_store_credits.*",
                            "spree_store_credits.deleted_at",
                            "spree_store_credits.sample_indicator_id",
                            "spree_store_credits.user_id"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::EmailValidator#validate_each",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "BEGIN"
                    },
                    "analyzed_query": {
                      "actions": [],
                      "tables": [],
                      "columns": [],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT ? AS one FROM \"spree_orders\" WHERE \"spree_orders\".\"number\" = $? AND \"spree_orders\".\"id\" != $? LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_orders"],
                      "columns": ["spree_orders.id", "spree_orders.number"],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"spree_roles_users\" WHERE \"spree_roles_users\".\"role_id\" = $? AND \"spree_roles_users\".\"user_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_roles_users"],
                              "columns": ["spree_roles_users.role_id", "spree_roles_users.user_id"],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"spree_roles\" WHERE \"spree_roles\".\"name\" = $? AND \"spree_roles\".\"id\" != $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_roles"],
                              "columns": ["spree_roles.id", "spree_roles.name"],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/spree/Spree::BaseDecorator#restore_changes",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "UPDATE \"spree_orders\" SET \"state\" = $?, \"updated_at\" = $? WHERE \"spree_orders\".\"id\" = $?"
                },
                "analyzed_query": {
                  "actions": ["update"],
                  "tables": ["spree_orders"],
                  "columns": ["spree_orders.id", "state", "updated_at"],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "COMMIT"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "app/models/Current#token",
                "labels": []
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/spree/Spree::BaseDecorator#set_token",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::StateChange#assign_user",
                    "labels": []
                  }
                ]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "BEGIN"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "INSERT INTO \"spree_state_changes\" (\"name\", \"previous_state\", \"stateful_id\", \"user_id\", \"stateful_type\", \"next_state\", \"created_at\", \"updated_at\", \"sample_indicator_id\") VALUES ($?, $?, $?, $?, $?, $?, $?, $?, $?) RETURNING \"id\""
                },
                "analyzed_query": {
                  "actions": ["insert"],
                  "tables": ["spree_state_changes"],
                  "columns": [
                    "created_at",
                    "id",
                    "name",
                    "next_state",
                    "previous_state",
                    "sample_indicator_id",
                    "stateful_id",
                    "stateful_type",
                    "updated_at",
                    "user_id"
                  ],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "COMMIT"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "solidus_core/Spree::EmailValidator#validate_each",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "BEGIN"
                    },
                    "analyzed_query": {
                      "actions": [],
                      "tables": [],
                      "columns": [],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT ? AS one FROM \"spree_orders\" WHERE \"spree_orders\".\"number\" = $? AND \"spree_orders\".\"id\" != $? LIMIT $?"
                    },
                    "analyzed_query": {
                      "actions": ["select"],
                      "tables": ["spree_orders"],
                      "columns": ["spree_orders.id", "spree_orders.number"],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": ["mvc.before_action"],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"spree_roles_users\" WHERE \"spree_roles_users\".\"role_id\" = $? AND \"spree_roles_users\".\"user_id\" = $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_roles_users"],
                              "columns": ["spree_roles_users.role_id", "spree_roles_users.user_id"],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": ["mvc.before_action"],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": ["log"]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"spree_roles\" WHERE \"spree_roles\".\"name\" = $? AND \"spree_roles\".\"id\" != $? LIMIT $?"
                            },
                            "analyzed_query": {
                              "actions": ["select"],
                              "tables": ["spree_roles"],
                              "columns": ["spree_roles.id", "spree_roles.name"],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": ["mvc.after_action"]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": ["mvc.after_action"]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": ["mvc.before_action"],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/spree/Spree::BaseDecorator#restore_changes",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/Current#token",
                        "labels": []
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": ["mvc.after_action"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "COMMIT"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": ["log"]
              },
              {
                "kind": "function",
                "function": "solidus_core/Spree::Order#completed?",
                "labels": []
              },
              {
                "kind": "function",
                "function": "actionpack/ActionController::Instrumentation#redirect_to",
                "labels": ["mvc.controller"],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": ["log"]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": ["mvc.after_action"]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": ["mvc.before_action"],
            "children": [
              {
                "kind": "function",
                "function": "app/models/spree/Spree::BaseDecorator#preserve_global_records_from_destruction",
                "labels": []
              }
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "BEGIN"
            },
            "analyzed_query": {
              "actions": [],
              "tables": [],
              "columns": [],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "DELETE FROM \"spree_order_mutexes\" WHERE \"spree_order_mutexes\".\"id\" = $?"
            },
            "analyzed_query": {
              "actions": ["delete"],
              "tables": ["spree_order_mutexes"],
              "columns": ["spree_order_mutexes.id"],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": ["mvc.after_action"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "COMMIT"
            },
            "analyzed_query": {
              "actions": [],
              "tables": [],
              "columns": [],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": ["mvc.after_action"]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": ["mvc.after_action"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": ["log"]
          }
        ]
      }
    ]
  }
]
