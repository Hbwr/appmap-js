[
  {
    "kind": "http_server_request",
    "route": "POST /login",
    "parameter_names": [
      "session",
      "controller",
      "action"
    ],
    "status_code": 302,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/SessionsController#create",
            "labels": [
              "access.public",
              "security.login"
            ],
            "children": [
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": [
                  "log"
                ]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"email\" = ? LIMIT ?"
                },
                "analyzed_query": {
                  "actions": [
                    "select"
                  ],
                  "tables": [
                    "users"
                  ],
                  "columns": [
                    "users.*",
                    "users.email"
                  ],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#destroy",
                "labels": [
                  "http.session.write"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#clear",
                    "labels": [
                      "http.session.write",
                      "http.session.clear"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/String#unpack",
                        "labels": [
                          "string.unpack"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": [
                      "string.unpack"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#log_in",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]=",
                    "labels": [
                      "http.session.write"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#remember",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/models/User#remember",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/models/User.new_remember_token",
                        "labels": [
                          "secret"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/User.digest",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "openssl/OpenSSL::Random.random_bytes",
                            "labels": [
                              "random.secure"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SAVEPOINT active_record_1"
                        },
                        "analyzed_query": {
                          "actions": [],
                          "tables": [],
                          "columns": [],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "UPDATE \"users\" SET \"remember_digest\" = ?, \"updated_at\" = ? WHERE \"users\".\"id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "update"
                          ],
                          "tables": [
                            "users"
                          ],
                          "columns": [
                            "remember_digest",
                            "updated_at",
                            "users.id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "RELEASE SAVEPOINT active_record_1"
                        },
                        "analyzed_query": {
                          "actions": [],
                          "tables": [],
                          "columns": [],
                          "joinCount": 0
                        }
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Generator::State#generate",
                    "labels": [
                      "format.json.generate",
                      "serialize"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::MessageEncryptor#encrypt_and_sign",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "openssl/OpenSSL::Cipher#encrypt",
                        "labels": [
                          "crypto.encrypt"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "openssl/OpenSSL::Cipher#key=",
                        "labels": [
                          "crypto.set_key"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "openssl/OpenSSL::Cipher#random_iv",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "openssl/OpenSSL::Random.random_bytes",
                            "labels": [
                              "random.secure"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "openssl/OpenSSL::Cipher#iv=",
                            "labels": [
                              "crypto.set_iv"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "openssl/OpenSSL::Cipher#auth_data=",
                        "labels": [
                          "crypto.set_auth_data"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Generator::State#generate",
                        "labels": [
                          "format.json.generate",
                          "serialize"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "openssl/OpenSSL::Cipher#update",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "openssl/OpenSSL::Cipher#final",
                        "labels": [
                          "crypto.final"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]=",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]=",
                    "labels": [
                      "http.session.write"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionController::Instrumentation#redirect_to",
                "labels": [
                  "mvc.controller"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "GET /",
    "parameter_names": [
      "controller",
      "action"
    ],
    "status_code": 200,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": [
                      "crypto.decrypt"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": [
                      "crypto.set_key"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": [
                      "crypto.set_iv"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": [
                      "crypto.set_auth_tag"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": [
                      "crypto.set_auth_data"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": [
                      "crypto.final"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/StaticPagesController#home",
            "labels": [
              "access.public"
            ],
            "children": [
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#logged_in?",
                "labels": [
                  "security.authentication"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#current_user",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                        "labels": [
                          "http.session.read"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "users"
                          ],
                          "columns": [
                            "users.*",
                            "users.id"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/models/User#feed",
                "labels": []
              }
            ]
          },
          {
            "kind": "function",
            "function": "actionview/ActionView::Resolver#find_all",
            "labels": [
              "mvc.template.resolver"
            ]
          },
          {
            "kind": "function",
            "function": "actionpack/ActionController::Renderers#render_to_body",
            "labels": [
              "mvc.render"
            ],
            "children": [
              {
                "kind": "function",
                "function": "app/views/app_views_static_pages_home_html_erb.render",
                "labels": [
                  "mvc.template"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#logged_in?",
                    "labels": [
                      "security.authentication"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__user_info_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/UsersHelper#gravatar_for",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "microposts"
                          ],
                          "columns": [
                            "*",
                            "microposts.user_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__stats_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"followed_id\" WHERE \"relationships\".\"follower_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "relationships",
                            "users"
                          ],
                          "columns": [
                            "*",
                            "relationships.followed_id",
                            "relationships.follower_id",
                            "users.id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"follower_id\" WHERE \"relationships\".\"followed_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "relationships",
                            "users"
                          ],
                          "columns": [
                            "*",
                            "relationships.followed_id",
                            "relationships.follower_id",
                            "users.id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__micropost_form_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_shared__error_messages_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__feed_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE (user_id IN (SELECT followed_id FROM relationships\n                     WHERE  follower_id = ?)\n                     OR user_id = ?)"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "microposts",
                            "relationships"
                          ],
                          "columns": [
                            "*",
                            "followed_id",
                            "follower_id",
                            "user_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_microposts__micropost_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"microposts\".* FROM \"microposts\" WHERE (user_id IN (SELECT followed_id FROM relationships\n                     WHERE  follower_id = ?)\n                     OR user_id = ?) ORDER BY \"microposts\".\"created_at\" DESC LIMIT ? OFFSET ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "microposts",
                                    "relationships"
                                  ],
                                  "columns": [
                                    "followed_id",
                                    "follower_id",
                                    "microposts.*",
                                    "microposts.created_at",
                                    "user_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/ApplicationHelper#full_title",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "sprockets/Sprockets::EncodingUtils.unmarshaled_deflated",
                    "labels": [
                      "deserialize.safe"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/ActiveSupport::MarshalWithAutoloading.load",
                        "labels": [
                          "deserialize.unsafe"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__shim_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__header_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#logged_in?",
                        "labels": [
                          "security.authentication"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__footer_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "POST /microposts",
    "parameter_names": [
      "micropost",
      "controller",
      "action"
    ],
    "status_code": 200,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": [
                      "crypto.decrypt"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": [
                      "crypto.set_key"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": [
                      "crypto.set_iv"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": [
                      "crypto.set_auth_tag"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": [
                      "crypto.set_auth_data"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": [
                      "crypto.final"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/LoggedInHelper#logged_in_user",
                "labels": [
                  "security.require_login"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#logged_in?",
                    "labels": [
                      "security.authentication"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "users"
                              ],
                              "columns": [
                                "users.*",
                                "users.id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/MicropostsController#create",
            "labels": [],
            "children": [
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/models/User#feed",
                "labels": []
              },
              {
                "kind": "function",
                "function": "actionpack/ActionController::Renderers#render_to_body",
                "labels": [
                  "mvc.render"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/views/app_views_static_pages_home_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#logged_in?",
                        "labels": [
                          "security.authentication"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_shared__user_info_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "microposts"
                              ],
                              "columns": [
                                "*",
                                "microposts.user_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_shared__stats_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"followed_id\" WHERE \"relationships\".\"follower_id\" = ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "relationships",
                                "users"
                              ],
                              "columns": [
                                "*",
                                "relationships.followed_id",
                                "relationships.follower_id",
                                "users.id"
                              ],
                              "joinCount": 1
                            }
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"follower_id\" WHERE \"relationships\".\"followed_id\" = ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "relationships",
                                "users"
                              ],
                              "columns": [
                                "*",
                                "relationships.followed_id",
                                "relationships.follower_id",
                                "users.id"
                              ],
                              "joinCount": 1
                            }
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_shared__micropost_form_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/views/app_views_shared__error_messages_html_erb.render",
                            "labels": [
                              "mvc.template"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionview/ActionView::Resolver#find_all",
                                "labels": [
                                  "mvc.template.resolver"
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_shared__feed_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE (user_id IN (SELECT followed_id FROM relationships\n                     WHERE  follower_id = ?)\n                     OR user_id = ?)"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "microposts",
                                "relationships"
                              ],
                              "columns": [
                                "*",
                                "followed_id",
                                "follower_id",
                                "user_id"
                              ],
                              "joinCount": 0
                            }
                          },
                          {
                            "kind": "function",
                            "function": "app/views/app_views_microposts__micropost_html_erb.render",
                            "labels": [
                              "mvc.template"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"microposts\".* FROM \"microposts\" WHERE (user_id IN (SELECT followed_id FROM relationships\n                     WHERE  follower_id = ?)\n                     OR user_id = ?) ORDER BY \"microposts\".\"created_at\" DESC LIMIT ? OFFSET ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "microposts",
                                        "relationships"
                                      ],
                                      "columns": [
                                        "followed_id",
                                        "follower_id",
                                        "microposts.*",
                                        "microposts.created_at",
                                        "user_id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "actionview/ActionView::Resolver#find_all",
                                "labels": [
                                  "mvc.template.resolver"
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "users"
                                      ],
                                      "columns": [
                                        "users.*",
                                        "users.id"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/UsersHelper#gravatar_for",
                                "labels": []
                              },
                              {
                                "kind": "function",
                                "function": "activerecord/ActiveRecord::Relation#records",
                                "labels": [
                                  "dao.materialize"
                                ],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "logger/Logger::LogDevice#write",
                                    "labels": [
                                      "log"
                                    ]
                                  },
                                  {
                                    "kind": "sql",
                                    "sql": {
                                      "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                    },
                                    "analyzed_query": {
                                      "actions": [
                                        "select"
                                      ],
                                      "tables": [
                                        "active_storage_attachments"
                                      ],
                                      "columns": [
                                        "active_storage_attachments.*",
                                        "active_storage_attachments.name",
                                        "active_storage_attachments.record_id",
                                        "active_storage_attachments.record_type"
                                      ],
                                      "joinCount": 0
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user?",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "app/helpers/SessionsHelper#current_user",
                                    "labels": [],
                                    "children": [
                                      {
                                        "kind": "function",
                                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                                        "labels": [
                                          "http.session.read"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/ApplicationHelper#full_title",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "sprockets/Sprockets::EncodingUtils.unmarshaled_deflated",
                        "labels": [
                          "deserialize.safe"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "ruby/ActiveSupport::MarshalWithAutoloading.load",
                            "labels": [
                              "deserialize.unsafe"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Parser#parse",
                        "labels": [
                          "format.json.parse",
                          "deserialize.safe"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_layouts__shim_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_layouts__header_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#logged_in?",
                            "labels": [
                              "security.authentication"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                        "labels": [
                          "http.session.read"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_layouts__footer_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "POST /microposts",
    "parameter_names": [
      "micropost",
      "controller",
      "action"
    ],
    "status_code": 302,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": [
                      "crypto.decrypt"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": [
                      "crypto.set_key"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": [
                      "crypto.set_iv"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": [
                      "crypto.set_auth_tag"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": [
                      "crypto.set_auth_data"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": [
                      "crypto.final"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/LoggedInHelper#logged_in_user",
                "labels": [
                  "security.require_login"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#logged_in?",
                    "labels": [
                      "security.authentication"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "users"
                              ],
                              "columns": [
                                "users.*",
                                "users.id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/MicropostsController#create",
            "labels": [],
            "children": [
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::LazyLoadHooks.run_load_hooks",
                    "labels": [
                      "deserialize.safe",
                      "lang.eval.safe"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/ERB#result",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "ruby/Kernel#eval",
                            "labels": [
                              "lang.eval"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "psych/Psych.load",
                        "labels": [
                          "deserialize.unsafe"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "psych/Psych.parse",
                            "labels": [
                              "format.yaml.parse"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "psych/Psych.parse_stream",
                                "labels": [
                                  "format.yaml.parse"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SAVEPOINT active_record_1"
                    },
                    "analyzed_query": {
                      "actions": [],
                      "tables": [],
                      "columns": [],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "PRAGMA table_info(\"active_storage_blobs\")"
                    },
                    "analyzed_query": {
                      "actions": [],
                      "tables": [],
                      "columns": [],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT sql FROM\n  (SELECT * FROM sqlite_master UNION ALL\n   SELECT * FROM sqlite_temp_master)\nWHERE type = ? AND name = ?\n"
                    },
                    "analyzed_query": {
                      "actions": [
                        "select"
                      ],
                      "tables": [
                        "sqlite_master",
                        "sqlite_temp_master"
                      ],
                      "columns": [
                        "*",
                        "name",
                        "sql",
                        "type"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "PRAGMA table_info(\"active_storage_blobs\")"
                    },
                    "analyzed_query": {
                      "actions": [],
                      "tables": [],
                      "columns": [],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT sql FROM\n  (SELECT * FROM sqlite_master UNION ALL\n   SELECT * FROM sqlite_temp_master)\nWHERE type = ? AND name = ?\n"
                    },
                    "analyzed_query": {
                      "actions": [
                        "select"
                      ],
                      "tables": [
                        "sqlite_master",
                        "sqlite_temp_master"
                      ],
                      "columns": [
                        "*",
                        "name",
                        "sql",
                        "type"
                      ],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": [
                  "log"
                ]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "INSERT INTO \"microposts\" (\"content\", \"user_id\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)"
                },
                "analyzed_query": {
                  "actions": [
                    "insert"
                  ],
                  "tables": [
                    "microposts"
                  ],
                  "columns": [
                    "content",
                    "created_at",
                    "updated_at",
                    "user_id"
                  ],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": [
                      "dao.materialize"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "active_storage_attachments"
                          ],
                          "columns": [
                            "active_storage_attachments.*",
                            "active_storage_attachments.name",
                            "active_storage_attachments.record_id",
                            "active_storage_attachments.record_type"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "ruby/String#unpack",
                            "labels": [
                              "string.unpack"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Generator::State#generate",
                        "labels": [
                          "format.json.generate",
                          "serialize"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"metadata\", \"byte_size\", \"checksum\", \"created_at\") VALUES (?, ?, ?, ?, ?, ?, ?)"
                        },
                        "analyzed_query": {
                          "actions": [
                            "insert"
                          ],
                          "tables": [
                            "active_storage_blobs"
                          ],
                          "columns": [
                            "byte_size",
                            "checksum",
                            "content_type",
                            "created_at",
                            "filename",
                            "key",
                            "metadata"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "json/JSON::Ext::Generator::State#generate",
                        "labels": [
                          "format.json.generate",
                          "serialize"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES (?, ?, ?, ?, ?)"
                    },
                    "analyzed_query": {
                      "actions": [
                        "insert"
                      ],
                      "tables": [
                        "active_storage_attachments"
                      ],
                      "columns": [
                        "blob_id",
                        "created_at",
                        "name",
                        "record_id",
                        "record_type"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "UPDATE \"microposts\" SET \"updated_at\" = ? WHERE \"microposts\".\"id\" = ?"
                    },
                    "analyzed_query": {
                      "actions": [
                        "update"
                      ],
                      "tables": [
                        "microposts"
                      ],
                      "columns": [
                        "microposts.id",
                        "updated_at"
                      ],
                      "joinCount": 0
                    }
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": [
                  "log"
                ]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "RELEASE SAVEPOINT active_record_1"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activejob/ActiveJob::Enqueuing#enqueue",
                    "labels": [
                      "job.create"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionController::Instrumentation#redirect_to",
                "labels": [
                  "mvc.controller"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "GET /",
    "parameter_names": [
      "controller",
      "action"
    ],
    "status_code": 200,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": [
                      "crypto.decrypt"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": [
                      "crypto.set_key"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": [
                      "crypto.set_iv"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": [
                      "crypto.set_auth_tag"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": [
                      "crypto.set_auth_data"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": [
                      "crypto.final"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/StaticPagesController#home",
            "labels": [
              "access.public"
            ],
            "children": [
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#logged_in?",
                "labels": [
                  "security.authentication"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#current_user",
                    "labels": [],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionpack/ActionDispatch::Request::Session#[]",
                        "labels": [
                          "http.session.read"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "users"
                          ],
                          "columns": [
                            "users.*",
                            "users.id"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/models/User#feed",
                "labels": []
              }
            ]
          },
          {
            "kind": "function",
            "function": "actionview/ActionView::Resolver#find_all",
            "labels": [
              "mvc.template.resolver"
            ]
          },
          {
            "kind": "function",
            "function": "actionpack/ActionController::Renderers#render_to_body",
            "labels": [
              "mvc.render"
            ],
            "children": [
              {
                "kind": "function",
                "function": "app/views/app_views_static_pages_home_html_erb.render",
                "labels": [
                  "mvc.template"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#logged_in?",
                    "labels": [
                      "security.authentication"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__user_info_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/UsersHelper#gravatar_for",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "microposts"
                          ],
                          "columns": [
                            "*",
                            "microposts.user_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__stats_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"followed_id\" WHERE \"relationships\".\"follower_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "relationships",
                            "users"
                          ],
                          "columns": [
                            "*",
                            "relationships.followed_id",
                            "relationships.follower_id",
                            "users.id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"follower_id\" WHERE \"relationships\".\"followed_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "relationships",
                            "users"
                          ],
                          "columns": [
                            "*",
                            "relationships.followed_id",
                            "relationships.follower_id",
                            "users.id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__micropost_form_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_shared__error_messages_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__feed_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE (user_id IN (SELECT followed_id FROM relationships\n                     WHERE  follower_id = ?)\n                     OR user_id = ?)"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "microposts",
                            "relationships"
                          ],
                          "columns": [
                            "*",
                            "followed_id",
                            "follower_id",
                            "user_id"
                          ],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_microposts__micropost_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"microposts\".* FROM \"microposts\" WHERE (user_id IN (SELECT followed_id FROM relationships\n                     WHERE  follower_id = ?)\n                     OR user_id = ?) ORDER BY \"microposts\".\"created_at\" DESC LIMIT ? OFFSET ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "microposts",
                                    "relationships"
                                  ],
                                  "columns": [
                                    "followed_id",
                                    "follower_id",
                                    "microposts.*",
                                    "microposts.created_at",
                                    "user_id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/models/Micropost#display_image",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_blobs"
                                  ],
                                  "columns": [
                                    "active_storage_blobs.*",
                                    "active_storage_blobs.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "ruby/Marshal.dump",
                            "labels": [
                              "serialize"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "json/JSON::Ext::Generator::State#generate",
                            "labels": [
                              "format.json.generate",
                              "serialize"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "ruby/Marshal.dump",
                            "labels": [
                              "serialize"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "json/JSON::Ext::Generator::State#generate",
                            "labels": [
                              "format.json.generate",
                              "serialize"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "users"
                                  ],
                                  "columns": [
                                    "users.*",
                                    "users.id"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/UsersHelper#gravatar_for",
                            "labels": []
                          },
                          {
                            "kind": "function",
                            "function": "activerecord/ActiveRecord::Relation#records",
                            "labels": [
                              "dao.materialize"
                            ],
                            "children": [
                              {
                                "kind": "function",
                                "function": "logger/Logger::LogDevice#write",
                                "labels": [
                                  "log"
                                ]
                              },
                              {
                                "kind": "sql",
                                "sql": {
                                  "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                                },
                                "analyzed_query": {
                                  "actions": [
                                    "select"
                                  ],
                                  "tables": [
                                    "active_storage_attachments"
                                  ],
                                  "columns": [
                                    "active_storage_attachments.*",
                                    "active_storage_attachments.name",
                                    "active_storage_attachments.record_id",
                                    "active_storage_attachments.record_type"
                                  ],
                                  "joinCount": 0
                                }
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user?",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "app/helpers/SessionsHelper#current_user",
                                "labels": [],
                                "children": [
                                  {
                                    "kind": "function",
                                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                                    "labels": [
                                      "http.session.read"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/ApplicationHelper#full_title",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "sprockets/Sprockets::EncodingUtils.unmarshaled_deflated",
                    "labels": [
                      "deserialize.safe"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/ActiveSupport::MarshalWithAutoloading.load",
                        "labels": [
                          "deserialize.unsafe"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__shim_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__header_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#logged_in?",
                        "labels": [
                          "security.authentication"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__footer_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "DELETE /microposts/{id}",
    "parameter_names": [
      "controller",
      "action",
      "id"
    ],
    "status_code": 302,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": [
                      "crypto.decrypt"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": [
                      "crypto.set_key"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": [
                      "crypto.set_iv"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": [
                      "crypto.set_auth_tag"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": [
                      "crypto.set_auth_data"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": [
                      "crypto.final"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/LoggedInHelper#logged_in_user",
                "labels": [
                  "security.require_login"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#logged_in?",
                    "labels": [
                      "security.authentication"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "users"
                              ],
                              "columns": [
                                "users.*",
                                "users.id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "app/helpers/SessionsHelper#current_user",
                "labels": [],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "activerecord/ActiveRecord::Relation#records",
                "labels": [
                  "dao.materialize"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"microposts\".* FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ? AND \"microposts\".\"id\" = ? ORDER BY \"microposts\".\"created_at\" DESC LIMIT ?"
                    },
                    "analyzed_query": {
                      "actions": [
                        "select"
                      ],
                      "tables": [
                        "microposts"
                      ],
                      "columns": [
                        "microposts.*",
                        "microposts.created_at",
                        "microposts.id",
                        "microposts.user_id"
                      ],
                      "joinCount": 0
                    }
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/MicropostsController#destroy",
            "labels": [],
            "children": [
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "activerecord/ActiveRecord::Relation#records",
                    "labels": [
                      "dao.materialize"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SAVEPOINT active_record_1"
                        },
                        "analyzed_query": {
                          "actions": [],
                          "tables": [],
                          "columns": [],
                          "joinCount": 0
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "active_storage_attachments"
                          ],
                          "columns": [
                            "active_storage_attachments.*",
                            "active_storage_attachments.name",
                            "active_storage_attachments.record_id",
                            "active_storage_attachments.record_type"
                          ],
                          "joinCount": 0
                        }
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                    "labels": [
                      "mvc.before_action"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "DELETE FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"id\" = ?"
                    },
                    "analyzed_query": {
                      "actions": [
                        "delete"
                      ],
                      "tables": [
                        "active_storage_attachments"
                      ],
                      "columns": [
                        "active_storage_attachments.id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                    "labels": [
                      "mvc.after_action"
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": [
                  "log"
                ]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "DELETE FROM \"microposts\" WHERE \"microposts\".\"id\" = ?"
                },
                "analyzed_query": {
                  "actions": [
                    "delete"
                  ],
                  "tables": [
                    "microposts"
                  ],
                  "columns": [
                    "microposts.id"
                  ],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": [
                  "log"
                ]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "RELEASE SAVEPOINT active_record_1"
                },
                "analyzed_query": {
                  "actions": [],
                  "tables": [],
                  "columns": [],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                "labels": [
                  "mvc.before_action"
                ]
              },
              {
                "kind": "function",
                "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                "labels": [
                  "mvc.after_action"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ? LIMIT ?"
                    },
                    "analyzed_query": {
                      "actions": [
                        "select"
                      ],
                      "tables": [
                        "active_storage_blobs"
                      ],
                      "columns": [
                        "active_storage_blobs.*",
                        "active_storage_blobs.id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "activejob/ActiveJob::Enqueuing#enqueue",
                    "labels": [
                      "job.create"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
                        "labels": [
                          "mvc.before_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
                        "labels": [
                          "mvc.after_action"
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ]
              },
              {
                "kind": "function",
                "function": "actionpack/ActionController::Instrumentation#redirect_to",
                "labels": [
                  "mvc.controller"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "GET /users/{id}",
    "parameter_names": [
      "controller",
      "action",
      "id"
    ],
    "status_code": 200,
    "children": [
      {
        "kind": "function",
        "function": "actionpack/ActionController::Instrumentation#process_action",
        "labels": [
          "mvc.controller"
        ],
        "children": [
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_before",
            "labels": [
              "mvc.before_action"
            ],
            "children": [
              {
                "kind": "function",
                "function": "actionpack/ActionDispatch::Request::Session#[]",
                "labels": [
                  "http.session.read"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#update",
                    "labels": [
                      "http.session.write"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Cookies::CookieJar#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#decrypt",
                    "labels": [
                      "crypto.decrypt"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#key=",
                    "labels": [
                      "crypto.set_key"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#iv=",
                    "labels": [
                      "crypto.set_iv"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_tag=",
                    "labels": [
                      "crypto.set_auth_tag"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#auth_data=",
                    "labels": [
                      "crypto.set_auth_data"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#update",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "openssl/OpenSSL::Cipher#final",
                    "labels": [
                      "crypto.final"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "ruby/String#unpack1",
                    "labels": [
                      "string.unpack"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "app/controllers/UsersController#show",
            "labels": [],
            "children": [
              {
                "kind": "function",
                "function": "logger/Logger::LogDevice#write",
                "labels": [
                  "log"
                ]
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                },
                "analyzed_query": {
                  "actions": [
                    "select"
                  ],
                  "tables": [
                    "users"
                  ],
                  "columns": [
                    "users.*",
                    "users.id"
                  ],
                  "joinCount": 0
                }
              },
              {
                "kind": "function",
                "function": "app/controllers/UsersController#page_number",
                "labels": []
              }
            ]
          },
          {
            "kind": "function",
            "function": "actionview/ActionView::Resolver#find_all",
            "labels": [
              "mvc.template.resolver"
            ]
          },
          {
            "kind": "function",
            "function": "actionpack/ActionController::Renderers#render_to_body",
            "labels": [
              "mvc.render"
            ],
            "children": [
              {
                "kind": "function",
                "function": "app/views/app_views_users_show_html_erb.render",
                "labels": [
                  "mvc.template"
                ],
                "children": [
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionview/ActionView::Resolver#find_all",
                    "labels": [
                      "mvc.template.resolver"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/UsersHelper#gravatar_for",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_shared__stats_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"followed_id\" WHERE \"relationships\".\"follower_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "relationships",
                            "users"
                          ],
                          "columns": [
                            "*",
                            "relationships.followed_id",
                            "relationships.follower_id",
                            "users.id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      },
                      {
                        "kind": "sql",
                        "sql": {
                          "normalized_query": "SELECT COUNT(*) FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"follower_id\" WHERE \"relationships\".\"followed_id\" = ?"
                        },
                        "analyzed_query": {
                          "actions": [
                            "select"
                          ],
                          "tables": [
                            "relationships",
                            "users"
                          ],
                          "columns": [
                            "*",
                            "relationships.followed_id",
                            "relationships.follower_id",
                            "users.id"
                          ],
                          "joinCount": 1
                        }
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/SessionsHelper#logged_in?",
                    "labels": [
                      "security.authentication"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "users"
                              ],
                              "columns": [
                                "users.*",
                                "users.id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_users__follow_form_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user?",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/models/User#following?",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT ? AS one FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"followed_id\" WHERE \"relationships\".\"follower_id\" = ? AND \"users\".\"id\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "relationships",
                                "users"
                              ],
                              "columns": [
                                "relationships.followed_id",
                                "relationships.follower_id",
                                "users.id"
                              ],
                              "joinCount": 1
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/views/app_views_users__follow_html_erb.render",
                        "labels": [
                          "mvc.template"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionview/ActionView::Resolver#find_all",
                            "labels": [
                              "mvc.template.resolver"
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT ? AS one FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ? LIMIT ?"
                    },
                    "analyzed_query": {
                      "actions": [
                        "select"
                      ],
                      "tables": [
                        "microposts"
                      ],
                      "columns": [
                        "microposts.user_id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "sql",
                    "sql": {
                      "normalized_query": "SELECT COUNT(*) FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ?"
                    },
                    "analyzed_query": {
                      "actions": [
                        "select"
                      ],
                      "tables": [
                        "microposts"
                      ],
                      "columns": [
                        "*",
                        "microposts.user_id"
                      ],
                      "joinCount": 0
                    }
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_microposts__micropost_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": [
                          "dao.materialize"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"microposts\".* FROM \"microposts\" WHERE \"microposts\".\"user_id\" = ? ORDER BY \"microposts\".\"created_at\" DESC LIMIT ? OFFSET ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "microposts"
                              ],
                              "columns": [
                                "microposts.*",
                                "microposts.created_at",
                                "microposts.user_id"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/UsersHelper#gravatar_for",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": [
                          "dao.materialize"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "active_storage_attachments"
                              ],
                              "columns": [
                                "active_storage_attachments.*",
                                "active_storage_attachments.name",
                                "active_storage_attachments.record_id",
                                "active_storage_attachments.record_type"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user?",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/UsersHelper#gravatar_for",
                        "labels": []
                      },
                      {
                        "kind": "function",
                        "function": "activerecord/ActiveRecord::Relation#records",
                        "labels": [
                          "dao.materialize"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "logger/Logger::LogDevice#write",
                            "labels": [
                              "log"
                            ]
                          },
                          {
                            "kind": "sql",
                            "sql": {
                              "normalized_query": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?"
                            },
                            "analyzed_query": {
                              "actions": [
                                "select"
                              ],
                              "tables": [
                                "active_storage_attachments"
                              ],
                              "columns": [
                                "active_storage_attachments.*",
                                "active_storage_attachments.name",
                                "active_storage_attachments.record_id",
                                "active_storage_attachments.record_type"
                              ],
                              "joinCount": 0
                            }
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user?",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/helpers/ApplicationHelper#full_title",
                    "labels": []
                  },
                  {
                    "kind": "function",
                    "function": "sprockets/Sprockets::EncodingUtils.unmarshaled_deflated",
                    "labels": [
                      "deserialize.safe"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "ruby/ActiveSupport::MarshalWithAutoloading.load",
                        "labels": [
                          "deserialize.unsafe"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "logger/Logger::LogDevice#write",
                    "labels": [
                      "log"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "json/JSON::Ext::Parser#parse",
                    "labels": [
                      "format.json.parse",
                      "deserialize.safe"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__shim_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__header_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#logged_in?",
                        "labels": [
                          "security.authentication"
                        ],
                        "children": [
                          {
                            "kind": "function",
                            "function": "app/helpers/SessionsHelper#current_user",
                            "labels": [],
                            "children": [
                              {
                                "kind": "function",
                                "function": "actionpack/ActionDispatch::Request::Session#[]",
                                "labels": [
                                  "http.session.read"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "app/helpers/SessionsHelper#current_user",
                        "labels": [],
                        "children": [
                          {
                            "kind": "function",
                            "function": "actionpack/ActionDispatch::Request::Session#[]",
                            "labels": [
                              "http.session.read"
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "actionpack/ActionDispatch::Request::Session#[]",
                    "labels": [
                      "http.session.read"
                    ]
                  },
                  {
                    "kind": "function",
                    "function": "app/views/app_views_layouts__footer_html_erb.render",
                    "labels": [
                      "mvc.template"
                    ],
                    "children": [
                      {
                        "kind": "function",
                        "function": "actionview/ActionView::Resolver#find_all",
                        "labels": [
                          "mvc.template.resolver"
                        ]
                      },
                      {
                        "kind": "function",
                        "function": "logger/Logger::LogDevice#write",
                        "labels": [
                          "log"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "kind": "function",
            "function": "activesupport/ActiveSupport::Callbacks::CallbackSequence#invoke_after",
            "labels": [
              "mvc.after_action"
            ]
          },
          {
            "kind": "function",
            "function": "logger/Logger::LogDevice#write",
            "labels": [
              "log"
            ]
          }
        ]
      }
    ]
  }
]