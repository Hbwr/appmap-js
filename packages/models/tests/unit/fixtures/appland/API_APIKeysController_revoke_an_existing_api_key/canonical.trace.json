[
  {
    "kind": "http_server_request",
    "route": "DELETE /api/api_keys(.:format)",
    "parameter_names": ["controller", "action"],
    "status_code": 200,
    "children": [
      {
        "kind": "function",
        "function": "app/models/ApiKey.authenticate",
        "labels": ["provider.authentication"],
        "children": [
          {
            "kind": "function",
            "function": "app/models/ApiKey.decode",
            "labels": []
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "SELECT * FROM \"api_keys\" WHERE (\"login\" = ?)"
            },
            "analyzed_query": {
              "actions": ["select"],
              "tables": ["api_keys"],
              "columns": ["*", "login"],
              "joinCount": 0
            }
          },
          {
            "kind": "function",
            "function": "app/models/ApiKey.touch",
            "labels": [],
            "children": [
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "UPDATE \"api_keys\" SET \"last_used\" = ? WHERE (\"id\" = ?)"
                },
                "analyzed_query": {
                  "actions": ["update"],
                  "tables": ["api_keys"],
                  "columns": ["id", "last_used"],
                  "joinCount": 0
                }
              }
            ]
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "SELECT * FROM \"users\" WHERE (\"users\".\"login\" = ?) LIMIT ?"
            },
            "analyzed_query": {
              "actions": ["select"],
              "tables": ["users"],
              "columns": ["*", "users.login"],
              "joinCount": 0
            }
          }
        ]
      },
      {
        "kind": "function",
        "function": "app/controllers/API::APIKeysController#destroy",
        "labels": [],
        "children": [
          {
            "kind": "function",
            "function": "app/models/ApiKey.revoke",
            "labels": [],
            "children": [
              {
                "kind": "function",
                "function": "app/models/ApiKey.decode",
                "labels": []
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "SELECT * FROM \"api_keys\" WHERE (\"login\" = ?)"
                },
                "analyzed_query": {
                  "actions": ["select"],
                  "tables": ["api_keys"],
                  "columns": ["*", "login"],
                  "joinCount": 0
                }
              },
              {
                "kind": "sql",
                "sql": {
                  "normalized_query": "DELETE FROM \"api_keys\" WHERE \"id\" = ?"
                },
                "analyzed_query": {
                  "actions": ["delete"],
                  "tables": ["api_keys"],
                  "columns": ["id"],
                  "joinCount": 0
                }
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "kind": "http_server_request",
    "route": "DELETE /api/api_keys(.:format)",
    "parameter_names": ["controller", "action"],
    "status_code": 401,
    "children": [
      {
        "kind": "function",
        "function": "app/models/ApiKey.authenticate",
        "labels": ["provider.authentication"],
        "children": [
          {
            "kind": "function",
            "function": "app/models/ApiKey.decode",
            "labels": []
          },
          {
            "kind": "sql",
            "sql": {
              "normalized_query": "SELECT * FROM \"api_keys\" WHERE (\"login\" = ?)"
            },
            "analyzed_query": {
              "actions": ["select"],
              "tables": ["api_keys"],
              "columns": ["*", "login"],
              "joinCount": 0
            }
          }
        ]
      },
      {
        "kind": "function",
        "function": "json/JSON::Ext::Generator::State#generate",
        "labels": ["serialization", "json"]
      }
    ]
  }
]
