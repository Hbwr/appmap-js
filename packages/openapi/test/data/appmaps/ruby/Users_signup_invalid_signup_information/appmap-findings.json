{
  "configuration": {
    "checks": [
      {
        "rule": "authz-before-authn"
      },
      {
        "rule": "deprecated-crypto-algorithm"
      },
      {
        "rule": "deserialization-of-untrusted-data"
      },
      {
        "rule": "exec-of-untrusted-command"
      },
      {
        "rule": "http-500"
      },
      {
        "rule": "logout-without-session-reset"
      },
      {
        "rule": "missing-content-type"
      },
      {
        "rule": "n-plus-one-query"
      },
      {
        "rule": "secret-in-log"
      },
      {
        "rule": "too-many-joins"
      },
      {
        "rule": "too-many-updates"
      },
      {
        "rule": "unauthenticated-encryption"
      },
      {
        "rule": "update-in-get-request"
      }
    ],
    "timestampMs": 1675346609376.2805
  },
  "appMapMetadata": {
    "/Users/danwarner/Documents/PROJECTS/appmap-js/packages/openapi/test/data/appmaps/ruby/Users_signup_invalid_signup_information.appmap.json": {
      "name": "Users_signup invalid signup information",
      "source_location": "/Users/kgilpin/source/land-of-apps/sample_app_6th_ed/test/integration/users_signup_test.rb:9",
      "test_status": "succeeded",
      "fingerprints": [
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "classDependencies",
          "digest": "5ae7cfff10c4cc6ae06ab11b40da090e4c76e2c96ab8b8382507647d84e8e4ad",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "classes",
          "digest": "fd840d106c3ed620a68d5c8f7678c3cc98da6a73691375d122610f18d6a9350c",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "httpClientRequests",
          "digest": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "httpServerRequests",
          "digest": "4281492c488dc90ee3080a87e2974a690d85579a3d48aa55018374a36a80d403",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "info",
          "digest": "551bc1dfd7c6ca6d7e7d8420ce9d85f99eacaf559ecea0a858dfdd912144cda9",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "labels",
          "digest": "02b3a26e03f21f22bbbc74170d594780c3a00ca332562c98750b60967ec8cebb",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "packageDependencies",
          "digest": "512c2f6bea38861da313e2e5c7692457b98b001a84203e0a22c9e1cc13d503da",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "packages",
          "digest": "86428b40fd2f29d0120cc67a8f30f1b266a67b704e6d37d02b6e2ca1ca807da3",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "sqlNormalized",
          "digest": "c5bdb83df83593ec588c9d305dd2a672b5cbb853eaadfbd6b2c74a0cb696cceb",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "sqlTables",
          "digest": "155dfea9984015042d2dbb19f93b1e983a068c6946247866d578c2a40dd9a909",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "trace",
          "digest": "30dadf35110b5fb3bdd817cab4af771ff8188af92556b4e7a32f83514ded82dc",
          "fingerprint_algorithm": "sha256"
        },
        {
          "appmap_digest": "a87de88c88c86076c259a13c135d905d65b6e5d3300c2727b6aa7c6838874e1d",
          "canonicalization_algorithm": "update",
          "digest": "3e4c5d17d32036a20a911153101007e0d86099e0287a51f5202e48f4b2f109d9",
          "fingerprint_algorithm": "sha256"
        }
      ]
    }
  },
  "findings": [],
  "checks": [
    {
      "rule": {
        "id": "authz-before-authn",
        "title": "Authorization performed before authentication",
        "labels": [
          "security.authorization",
          "security.authentication"
        ],
        "scope": "http_server_request",
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-863": "https://cwe.mitre.org/data/definitions/863.html"
        },
        "description": "Determines when authorization logic is applied to a user identity that has not been properly verified. Because the the user's identity has not been verified yet, the outcome of the authorization check cannot be trusted. A malicious user might be able to get themselves authorized as a different user than they really are - or they may not be logged in at all.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#authz-before-authn"
      },
      "id": "authz-before-authn",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deprecated-crypto-algorithm",
        "title": "Deprecated cryptographic algorithm",
        "description": "---\nrule: deprecated-crypto-algorithm\nname: Deprecated crypto algorithm\ntitle: Deprecated cryptographic algorithm\nreferences:\n  A02:2021: https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\nimpactDomain: Security\nlabels:\n  - crypto.encrypt\n  - crypto.decrypt\n  - crypto.digest\nscope: root\n---\n\nEnsure that cryptographic operations do not use deprecated algorithms.\n",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deprecated-crypto-algorithm",
        "labels": [
          "crypto.encrypt",
          "crypto.decrypt",
          "crypto.digest"
        ],
        "scope": "root",
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "deprecated-crypto-algorithm",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deserialization-of-untrusted-data",
        "title": "Deserialization of untrusted data",
        "labels": [
          "deserialize.unsafe",
          "deserialize.safe",
          "deserialize.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "scope": "http_server_request",
        "references": {
          "CWE-502": "https://cwe.mitre.org/data/definitions/502.html",
          "Ruby Security": "https://docs.ruby-lang.org/en/3.0/doc/security_rdoc.html"
        },
        "description": "Finds occurrances of deserialization in which the mechanism employed is known to be unsafe, and the data comes from an untrusted source and hasn't passed through a sanitization mechanism.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deserialization-of-untrusted-data"
      },
      "id": "deserialization-of-untrusted-data",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "exec-of-untrusted-command",
        "title": "Execution of untrusted system command",
        "labels": [
          "system.exec",
          "system.exec.safe",
          "system.exec.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-78": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "description": "Find occurrances of system command execution in which the command string is not guaranteed to be safe.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#exec-of-untrusted-command"
      },
      "id": "exec-of-untrusted-command",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "http-500",
        "title": "HTTP 500 status code",
        "description": "Identifies when an HTTP server request has returned a 500 status code. HTTP 500 status code generally indicate an unanticipated problem in the backend that is not handled in a predictable way. 500 status codes are also hard for client code to handle, because they don't indicate any particular problem or suggest a solution.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#http-500",
        "labels": [],
        "scope": "http_server_request",
        "enumerateScope": false,
        "impactDomain": "Stability",
        "references": {
          "CWE-392": "https://cwe.mitre.org/data/definitions/392.html"
        }
      },
      "id": "http-500",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "logout-without-session-reset",
        "title": "Logout without session reset",
        "scope": "http_server_request",
        "labels": [
          "http.session.clear",
          "security.logout"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-488": "https://cwe.mitre.org/data/definitions/488.html",
          "OWASP - Session fixation": "https://owasp.org/www-community/attacks/Session_fixation",
          "Ruby on Rails - Session fixation countermeasures": "https://guides.rubyonrails.org/security.html#session-fixation-countermeasures"
        },
        "description": "Determines when a user has been logged out from the application, but the session hasn't been cleared. When the session isn't cleared after logout, the session is vulnerable to a [session fixation attack](https://owasp.org/www-community/attacks/Session_fixation).",
        "url": "https://appland.com/docs/analysis/rules-reference.html#logout-without-session-reset"
      },
      "id": "logout-without-session-reset",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "missing-content-type",
        "title": "HTTP server request without a Content-Type header",
        "scope": "http_server_request",
        "impactDomain": "Stability",
        "enumerateScope": false,
        "description": "Finds HTTP server requests that don't provide a `Content-Type` header in the response.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-content-type"
      },
      "id": "missing-content-type",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "n-plus-one-query",
        "title": "N plus 1 SQL query",
        "scope": "command",
        "impactDomain": "Performance",
        "enumerateScope": false,
        "references": {
          "CWE-1073": "https://cwe.mitre.org/data/definitions/1073.html"
        },
        "description": "Finds occurrences of a query being repeated within a loop.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#n-plus-one-query"
      },
      "id": "n-plus-one-query",
      "options": {
        "warningLimit": 5,
        "errorLimit": 10
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "secret-in-log",
        "title": "Secret in log",
        "labels": [
          "secret",
          "log"
        ],
        "scope": "root",
        "impactDomain": "Security",
        "enumerateScope": true,
        "references": {
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html"
        },
        "description": "Identifies when a known or assumed secret is written to a log. Logs are often transported into other systems that are treated with lesser security - such as backups. Therefore, secrets written into log files are more likely to be leaked or discovered by cyber-attackers.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#secret-in-log"
      },
      "id": "secret-in-log",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "too-many-joins",
        "title": "Too many joins",
        "description": "Verifies that the number of joins in SQL queries does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-joins",
        "labels": [],
        "enumerateScope": false,
        "impactDomain": "Performance",
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      },
      "id": "too-many-joins",
      "options": {
        "warningLimit": 5,
        "excludeTables": [
          {
            "match": {},
            "ignoreCase": false
          },
          {
            "equal": "information_schema",
            "ignoreCase": false
          }
        ]
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "too-many-updates",
        "title": "Too many SQL and RPC updates performed in one command",
        "scope": "command",
        "enumerateScope": false,
        "impactDomain": "Maintainability",
        "references": {
          "CWE-1048": "https://cwe.mitre.org/data/definitions/1048.html"
        },
        "description": "Verifies that the number of SQL and RPC updates performed by a command does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-updates"
      },
      "id": "too-many-updates",
      "options": {
        "warningLimit": 20
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    },
    {
      "rule": {
        "id": "unauthenticated-encryption",
        "title": "Unauthenticated encryption",
        "description": "Ensures that encryption operations use authenticated encryption.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#unauthenticated-encryption",
        "labels": [
          "crypto.encrypt",
          "crypto.set_auth_data"
        ],
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "unauthenticated-encryption",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "update-in-get-request",
        "title": "Data update performed in GET or HEAD request",
        "scope": "http_server_request",
        "enumerateScope": true,
        "labels": [
          "audit"
        ],
        "impactDomain": "Maintainability",
        "description": "Finds SQL updates that are performed in an HTTP server `GET` request.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#update-in-get-request"
      },
      "id": "update-in-get-request",
      "options": {
        "_queryInclude": [
          {},
          {}
        ],
        "_queryExclude": []
      },
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    }
  ],
  "summary": {
    "numAppMaps": 1,
    "numChecks": 13,
    "rules": [
      "authz-before-authn",
      "deprecated-crypto-algorithm",
      "deserialization-of-untrusted-data",
      "exec-of-untrusted-command",
      "http-500",
      "logout-without-session-reset",
      "missing-content-type",
      "n-plus-one-query",
      "secret-in-log",
      "too-many-joins",
      "too-many-updates",
      "unauthenticated-encryption",
      "update-in-get-request"
    ],
    "ruleLabels": [
      "audit",
      "crypto.decrypt",
      "crypto.digest",
      "crypto.encrypt",
      "crypto.set_auth_data",
      "deserialize.safe",
      "deserialize.sanitize",
      "deserialize.unsafe",
      "http.session.clear",
      "log",
      "secret",
      "security.authentication",
      "security.authorization",
      "security.logout",
      "system.exec",
      "system.exec.safe",
      "system.exec.sanitize"
    ],
    "numFindings": 0,
    "appMapMetadata": {
      "labels": [],
      "apps": [
        "sample_app_6th_ed"
      ],
      "clients": [
        {
          "name": "appmap",
          "url": "https://github.com/getappmap/appmap-ruby",
          "version": "0.72.1"
        }
      ],
      "frameworks": [
        {
          "name": "rails",
          "version": "6.0.4.1"
        },
        {
          "name": "minitest",
          "version": "5.11.3"
        }
      ],
      "git": [
        {
          "repository": "git@github.com:land-of-apps/sample_app_6th_ed.git",
          "branch": "appmap-e2e",
          "commit": "d34613cd296aa443ababfb3a8912124eade0b582",
          "status": [
            "D  .npmrc",
            "M Gemfile",
            "M Gemfile.lock",
            "M app/controllers/sessions_controller.rb",
            "M app/helpers/sessions_helper.rb",
            "M appland-scanner.yml",
            "M appmap.yml",
            "M package.json",
            "M swagger/openapi.yaml",
            "M swagger/openapi_stable.yaml",
            "M yarn.lock",
            "?? appland-findings.json"
          ],
          "git_last_annotated_tag": null,
          "git_last_tag": null,
          "git_commits_since_last_annotated_tag": null,
          "git_commits_since_last_tag": null
        }
      ],
      "languages": [
        {
          "name": "ruby",
          "engine": "ruby",
          "version": "3.0.2"
        }
      ],
      "recorders": [
        {
          "name": "minitest"
        }
      ],
      "testStatuses": [],
      "exceptions": []
    }
  }
}