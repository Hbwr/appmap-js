{
  "events": [
    {
      "id": 1,
      "event": "call",
      "thread_id": 86080,
      "defined_class": "ScannerFinding",
      "method_id": "for_check",
      "path": "app/models/scanner_finding.rb",
      "lineno": 152,
      "static": true,
      "parameters": [
        {
          "name": "job_id",
          "class": "Integer",
          "object_id": 15,
          "value": "7",
          "kind": "req"
        },
        {
          "name": "check_id",
          "class": "String",
          "object_id": 1536160,
          "value": "n-plus-one-query",
          "kind": "req"
        },
        {
          "name": "status",
          "class": "NilClass",
          "object_id": 8,
          "value": null,
          "kind": "opt"
        }
      ],
      "receiver": {
        "class": "Class",
        "object_id": 94860,
        "value": "ScannerFinding"
      }
    },
    {
      "id": 2,
      "event": "call",
      "thread_id": 86080,
      "defined_class": "Logger::LogDevice",
      "method_id": "write",
      "path": "/Users/kgilpin/.rbenv/versions/3.0.1/lib/ruby/3.0.0/logger/log_device.rb",
      "lineno": 31,
      "static": false,
      "parameters": [
        {
          "name": "message",
          "class": "String",
          "object_id": 1536180,
          "value": "  \u001b[1m\u001b[36mSequel::Postgres::Database (0.7ms)\u001b[0m  \u001b[1mSAVEPOINT autopoint_1\u001b[0m\n",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Logger::LogDevice",
        "object_id": 79200,
        "value": "#<Logger::LogDevice:0x00007f97566b3998>"
      }
    },
    {
      "id": 3,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 2,
      "elapsed": 0.000033999793231487274,
      "return_value": {
        "class": "Integer",
        "value": "81",
        "object_id": 163
      }
    },
    {
      "id": 4,
      "event": "call",
      "thread_id": 86080,
      "sql_query": {
        "sql": "SAVEPOINT autopoint_1",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 5,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 4,
      "elapsed": 0.000854
    },
    {
      "id": 6,
      "event": "call",
      "thread_id": 86080,
      "defined_class": "Logger::LogDevice",
      "method_id": "write",
      "path": "/Users/kgilpin/.rbenv/versions/3.0.1/lib/ruby/3.0.0/logger/log_device.rb",
      "lineno": 31,
      "static": false,
      "parameters": [
        {
          "name": "message",
          "class": "String",
          "object_id": 1536200,
          "value": "  \u001b[1m\u001b[35mSequel::Postgres::Database (6.8ms)\u001b[0m  SELECT \"pg_attribute\".\"attname\" AS \"name\", CAST(\" (...1219 more characters)",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Logger::LogDevice",
        "object_id": 79200,
        "value": "#<Logger::LogDevice:0x00007f97566b3998>"
      }
    },
    {
      "id": 7,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 6,
      "elapsed": 0.00003200024366378784,
      "return_value": {
        "class": "Integer",
        "value": "1319",
        "object_id": 2639
      }
    },
    {
      "id": 8,
      "event": "call",
      "thread_id": 86080,
      "sql_query": {
        "sql": "SELECT \"pg_attribute\".\"attname\" AS \"name\", CAST(\"pg_attribute\".\"atttypid\" AS integer) AS \"oid\", CAST(\"basetype\".\"oid\" AS integer) AS \"base_oid\", format_type(\"basetype\".\"oid\", \"pg_type\".\"typtypmod\") AS \"db_base_type\", format_type(\"pg_type\".\"oid\", \"pg_attribute\".\"atttypmod\") AS \"db_type\", pg_get_expr(\"pg_attrdef\".\"adbin\", \"pg_class\".\"oid\") AS \"default\", NOT \"pg_attribute\".\"attnotnull\" AS \"allow_null\", COALESCE((\"pg_attribute\".\"attnum\" = ANY(\"pg_index\".\"indkey\")), false) AS \"primary_key\", \"pg_attribute\".\"attidentity\", (\"pg_attribute\".\"attgenerated\" != '') AS \"generated\" FROM \"pg_class\" INNER JOIN \"pg_attribute\" ON (\"pg_attribute\".\"attrelid\" = \"pg_class\".\"oid\") INNER JOIN \"pg_type\" ON (\"pg_type\".\"oid\" = \"pg_attribute\".\"atttypid\") LEFT OUTER JOIN \"pg_type\" AS \"basetype\" ON (\"basetype\".\"oid\" = \"pg_type\".\"typbasetype\") LEFT OUTER JOIN \"pg_attrdef\" ON ((\"pg_attrdef\".\"adrelid\" = \"pg_class\".\"oid\") AND (\"pg_attrdef\".\"adnum\" = \"pg_attribute\".\"attnum\")) LEFT OUTER JOIN \"pg_index\" ON ((\"pg_index\".\"indrelid\" = \"pg_class\".\"oid\") AND (\"pg_index\".\"indisprimary\" IS TRUE)) WHERE ((\"pg_attribute\".\"attisdropped\" IS FALSE) AND (\"pg_attribute\".\"attnum\" > 0) AND (\"pg_class\".\"oid\" = CAST(CAST('\"finding_occurrences_v\"' AS regclass) AS oid))) ORDER BY \"pg_attribute\".\"attnum\"",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 9,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 8,
      "elapsed": 0.006932
    },
    {
      "id": 10,
      "event": "call",
      "thread_id": 86080,
      "defined_class": "Logger::LogDevice",
      "method_id": "write",
      "path": "/Users/kgilpin/.rbenv/versions/3.0.1/lib/ruby/3.0.0/logger/log_device.rb",
      "lineno": 31,
      "static": false,
      "parameters": [
        {
          "name": "message",
          "class": "String",
          "object_id": 1536220,
          "value": "  \u001b[1m\u001b[36mSequel::Postgres::Database (0.9ms)\u001b[0m  \u001b[1mRELEASE SAVEPOINT autopoint_1\u001b[0m\n",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Logger::LogDevice",
        "object_id": 79200,
        "value": "#<Logger::LogDevice:0x00007f97566b3998>"
      }
    },
    {
      "id": 11,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 10,
      "elapsed": 0.0000350000336766243,
      "return_value": {
        "class": "Integer",
        "value": "89",
        "object_id": 179
      }
    },
    {
      "id": 12,
      "event": "call",
      "thread_id": 86080,
      "sql_query": {
        "sql": "RELEASE SAVEPOINT autopoint_1",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 13,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 12,
      "elapsed": 0.001141
    },
    {
      "id": 14,
      "event": "call",
      "thread_id": 86080,
      "defined_class": "Logger::LogDevice",
      "method_id": "write",
      "path": "/Users/kgilpin/.rbenv/versions/3.0.1/lib/ruby/3.0.0/logger/log_device.rb",
      "lineno": 31,
      "static": false,
      "parameters": [
        {
          "name": "message",
          "class": "String",
          "object_id": 1536240,
          "value": "  \u001b[1m\u001b[35mSequel::Postgres::Database (4.5ms)\u001b[0m  SELECT \"scanner_checks\".\"description\", \"refs\", \"s (...362 more characters)",
          "kind": "req"
        }
      ],
      "receiver": {
        "class": "Logger::LogDevice",
        "object_id": 79200,
        "value": "#<Logger::LogDevice:0x00007f97566b3998>"
      }
    },
    {
      "id": 15,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 14,
      "elapsed": 0.0000350000336766243,
      "return_value": {
        "class": "Integer",
        "value": "462",
        "object_id": 925
      }
    },
    {
      "id": 16,
      "event": "call",
      "thread_id": 86080,
      "sql_query": {
        "sql": "SELECT \"scanner_checks\".\"description\", \"refs\", \"scanner_check_id\", \"identity_hash\", \"status\", \"message\", \"impact_category\" FROM \"finding_occurrences_v\" LEFT JOIN \"scanner_checks\" ON ((\"scanner_checks\".\"check_id\" = \"finding_occurrences_v\".\"scanner_check_id\") AND (\"scanner_checks\".\"job_id\" = \"finding_occurrences_v\".\"scanner_job_id\")) WHERE ((\"scanner_job_id\" = 7) AND (\"scanner_check_id\" = 'n-plus-one-query'))",
        "database_type": "postgres",
        "server_version": 120003
      }
    },
    {
      "id": 17,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 16,
      "elapsed": 0.004714
    },
    {
      "id": 18,
      "event": "call",
      "thread_id": 86080,
      "defined_class": "JSON::Ext::Parser",
      "method_id": "parse",
      "path": "JSON::Ext::Parser#parse",
      "static": false,
      "receiver": {
        "class": "JSON::Ext::Parser",
        "object_id": 1536260,
        "value": "#<JSON::Ext::Parser:0x00007f9755186750>"
      }
    },
    {
      "id": 19,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 18,
      "elapsed": 0.00000600004568696022,
      "return_value": {
        "class": "Hash",
        "value": "{CWE-1073=>https://cwe.mitre.org/data/definitions/1073.html}",
        "object_id": 1536280,
        "size": 1
      }
    },
    {
      "id": 20,
      "event": "return",
      "thread_id": 86080,
      "parent_id": 1,
      "elapsed": 0.015981000382453203,
      "return_value": {
        "class": "Array",
        "value": "[#<struct ScannerFinding::FindingListItem check_id=\"n-plus-one-query\", description=\"Finds occurrences]",
        "object_id": 1536300,
        "size": 1
      }
    }
  ],
  "version": "1.7.0",
  "metadata": {
    "app": "appland/appmap-server",
    "language": {
      "name": "ruby",
      "engine": "ruby",
      "version": "3.0.1"
    },
    "client": {
      "name": "appmap",
      "url": "https://github.com/getappmap/appmap-ruby",
      "version": "0.85.0"
    },
    "frameworks": [
      {
        "name": "rails",
        "version": "6.1.4.1"
      },
      {
        "name": "rspec",
        "version": "3.10.1"
      }
    ],
    "git": {
      "repository": "git@github.com:getappmap/appmap-server.git",
      "branch": "master",
      "commit": "764b0eb00990622b3824ef02bdb5fb3d846938df",
      "status": [
        "M Gemfile.lock",
        "M db/structure.sql",
        "?? appmap-findings.json"
      ],
      "git_last_annotated_tag": null,
      "git_last_tag": "v0.29.0",
      "git_commits_since_last_annotated_tag": null,
      "git_commits_since_last_tag": 0
    },
    "name": "ScannerFinding for_check returns all findings for a particular check",
    "source_location": "spec/models/scanner_finding_spec.rb",
    "recorder": {
      "name": "rspec"
    },
    "test_status": "succeeded",
    "fingerprints": [
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "classDependencies",
        "digest": "aee8ea8c3950e64df37ae6ff74711fec19985a77a663f9e9eba1db0439142626",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "classes",
        "digest": "569a8ffa5698e6897b3b9e7fb4e58b5f463b6f3a97a95661411dbb786aeee218",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "httpClientRequests",
        "digest": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "httpServerRequests",
        "digest": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "info",
        "digest": "44e26135cc45371db4738fd51317231b59c4cdbd051a3a4c542bd3db36fc5b4a",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "labels",
        "digest": "6ef9e9c2b471bfc71289837d670cd0b5cc59ad2c6412c670302f81cecf431160",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "packageDependencies",
        "digest": "57d1952d3b298407188f75422aa762dbcfa257ebb44c63d587851f4fdcbad906",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "packages",
        "digest": "758c48f1dea07e6362fc4355935bb11760150749ebcff0f73d8d88747b81f832",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "sqlNormalized",
        "digest": "ce4af9467fadc5f301167241cc719fc5d09305d5572a2647e0756a8feed5d60b",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "sqlTables",
        "digest": "7d999d001b8224b981650cc57d33ee0eb6902614c4d389363f0a8b6b3234433a",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "trace",
        "digest": "1907d402a53eb19550e5631000f9faf36091e1a6957ff866cd461dc5c59e9917",
        "fingerprint_algorithm": "sha256"
      },
      {
        "appmap_digest": "dd182f0760e8f06cf0ad438355e21a4196913b38ef4ae614a4c4c64a1e23ed86",
        "canonicalization_algorithm": "update",
        "digest": "d1f6ee4b425fd36e4a462fa269be068bffda836da09b25d35253d93ed895b77d",
        "fingerprint_algorithm": "sha256"
      }
    ]
  },
  "classMap": [
    {
      "name": "json",
      "type": "package",
      "children": [
        {
          "name": "JSON",
          "type": "class",
          "children": [
            {
              "name": "Ext",
              "type": "class",
              "children": [
                {
                  "name": "Parser",
                  "type": "class",
                  "children": [
                    {
                      "name": "parse",
                      "type": "function",
                      "labels": [
                        "format.json.parse",
                        "deserialize.safe"
                      ],
                      "static": false,
                      "location": "JSON::Ext::Parser#parse"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "logger",
      "type": "package",
      "children": [
        {
          "name": "Logger",
          "type": "class",
          "children": [
            {
              "name": "LogDevice",
              "type": "class",
              "children": [
                {
                  "name": "write",
                  "type": "function",
                  "labels": [
                    "log"
                  ],
                  "static": false,
                  "location": "/Users/kgilpin/.rbenv/versions/3.0.1/lib/ruby/3.0.0/logger/log_device.rb:31"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "app",
      "type": "package",
      "children": [
        {
          "name": "models",
          "type": "package",
          "children": [
            {
              "name": "ScannerFinding",
              "type": "class",
              "children": [
                {
                  "name": "for_check",
                  "type": "function",
                  "static": true,
                  "location": "app/models/scanner_finding.rb:152"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "database",
      "name": "Database",
      "children": [
        {
          "type": "query",
          "name": "SAVEPOINT autopoint_1"
        },
        {
          "type": "query",
          "name": "RELEASE SAVEPOINT autopoint_1"
        },
        {
          "type": "query",
          "name": "SELECT \"pg_attribute\".\"attname\" AS \"name\", CAST(\"pg_attribute\".\"atttypid\" AS integer) AS \"oid\", CAST(\"basetype\".\"oid\" AS integer) AS \"base_oid\", format_type(\"basetype\".\"oid\", \"pg_type\".\"typtypmod\") AS \"db_base_type\", format_type(\"pg_type\".\"oid\", \"pg_attribute\".\"atttypmod\") AS \"db_type\", pg_get_expr(\"pg_attrdef\".\"adbin\", \"pg_class\".\"oid\") AS \"default\", NOT \"pg_attribute\".\"attnotnull\" AS \"allow_null\", COALESCE((\"pg_attribute\".\"attnum\" = ANY(\"pg_index\".\"indkey\")), false) AS \"primary_key\", \"pg_attribute\".\"attidentity\", (\"pg_attribute\".\"attgenerated\" != '') AS \"generated\" FROM \"pg_class\" INNER JOIN \"pg_attribute\" ON (\"pg_attribute\".\"attrelid\" = \"pg_class\".\"oid\") INNER JOIN \"pg_type\" ON (\"pg_type\".\"oid\" = \"pg_attribute\".\"atttypid\") LEFT OUTER JOIN \"pg_type\" AS \"basetype\" ON (\"basetype\".\"oid\" = \"pg_type\".\"typbasetype\") LEFT OUTER JOIN \"pg_attrdef\" ON ((\"pg_attrdef\".\"adrelid\" = \"pg_class\".\"oid\") AND (\"pg_attrdef\".\"adnum\" = \"pg_attribute\".\"attnum\")) LEFT OUTER JOIN \"pg_index\" ON ((\"pg_index\".\"indrelid\" = \"pg_class\".\"oid\") AND (\"pg_index\".\"indisprimary\" IS TRUE)) WHERE ((\"pg_attribute\".\"attisdropped\" IS FALSE) AND (\"pg_attribute\".\"attnum\" > 0) AND (\"pg_class\".\"oid\" = CAST(CAST('\"finding_occurrences_v\"' AS regclass) AS oid))) ORDER BY \"pg_attribute\".\"attnum\""
        },
        {
          "type": "query",
          "name": "SELECT \"scanner_checks\".\"description\", \"refs\", \"scanner_check_id\", \"identity_hash\", \"status\", \"message\", \"impact_category\" FROM \"finding_occurrences_v\" LEFT JOIN \"scanner_checks\" ON ((\"scanner_checks\".\"check_id\" = \"finding_occurrences_v\".\"scanner_check_id\") AND (\"scanner_checks\".\"job_id\" = \"finding_occurrences_v\".\"scanner_job_id\")) WHERE ((\"scanner_job_id\" = 7) AND (\"scanner_check_id\" = 'n-plus-one-query'))"
        }
      ]
    }
  ]
}