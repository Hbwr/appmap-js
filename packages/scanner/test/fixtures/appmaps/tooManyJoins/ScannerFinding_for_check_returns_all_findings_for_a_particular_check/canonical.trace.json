[
  {
    "kind": "function",
    "function": "app/models/ScannerFinding.for_check",
    "labels": [],
    "children": [
      {
        "kind": "function",
        "function": "logger/Logger::LogDevice#write",
        "labels": [
          "log"
        ]
      },
      {
        "kind": "sql",
        "sql": {
          "normalized_query": "SAVEPOINT autopoint_1"
        },
        "analyzed_query": {
          "actions": [],
          "tables": [],
          "columns": [],
          "joinCount": 0
        }
      },
      {
        "kind": "function",
        "function": "logger/Logger::LogDevice#write",
        "labels": [
          "log"
        ]
      },
      {
        "kind": "sql",
        "sql": {
          "normalized_query": "SELECT \"pg_attribute\".\"attname\" AS \"name\", CAST(\"pg_attribute\".\"atttypid\" AS integer) AS \"oid\", CAST(\"basetype\".\"oid\" AS integer) AS \"base_oid\", format_type(\"basetype\".\"oid\", \"pg_type\".\"typtypmod\") AS \"db_base_type\", format_type(\"pg_type\".\"oid\", \"pg_attribute\".\"atttypmod\") AS \"db_type\", pg_get_expr(\"pg_attrdef\".\"adbin\", \"pg_class\".\"oid\") AS \"default\", NOT \"pg_attribute\".\"attnotnull\" AS \"allow_null\", COALESCE((\"pg_attribute\".\"attnum\" = ANY(\"pg_index\".\"indkey\")), ?) AS \"primary_key\", \"pg_attribute\".\"attidentity\", (\"pg_attribute\".\"attgenerated\" != ?) AS \"generated\" FROM \"pg_class\" INNER JOIN \"pg_attribute\" ON (\"pg_attribute\".\"attrelid\" = \"pg_class\".\"oid\") INNER JOIN \"pg_type\" ON (\"pg_type\".\"oid\" = \"pg_attribute\".\"atttypid\") LEFT OUTER JOIN \"pg_type\" AS \"basetype\" ON (\"basetype\".\"oid\" = \"pg_type\".\"typbasetype\") LEFT OUTER JOIN \"pg_attrdef\" ON ((\"pg_attrdef\".\"adrelid\" = \"pg_class\".\"oid\") AND (\"pg_attrdef\".\"adnum\" = \"pg_attribute\".\"attnum\")) LEFT OUTER JOIN \"pg_index\" ON ((\"pg_index\".\"indrelid\" = \"pg_class\".\"oid\") AND (\"pg_index\".\"indisprimary\" IS ?)) WHERE ((\"pg_attribute\".\"attisdropped\" IS ?) AND (\"pg_attribute\".\"attnum\" > ?) AND (\"pg_class\".\"oid\" = CAST(CAST(? AS regclass) AS oid))) ORDER BY \"pg_attribute\".\"attnum\""
        },
        "analyzed_query": {
          "actions": [
            "select"
          ],
          "tables": [
            "pg_attrdef",
            "pg_attribute",
            "pg_class",
            "pg_index",
            "pg_type"
          ],
          "columns": [
            "basetype.oid",
            "false",
            "pg_attrdef.adbin",
            "pg_attrdef.adnum",
            "pg_attrdef.adrelid",
            "pg_attribute.attgenerated",
            "pg_attribute.attidentity",
            "pg_attribute.attisdropped",
            "pg_attribute.attname",
            "pg_attribute.attnotnull",
            "pg_attribute.attnum",
            "pg_attribute.attrelid",
            "pg_attribute.atttypid",
            "pg_attribute.atttypmod",
            "pg_class.oid",
            "pg_index.indisprimary",
            "pg_index.indkey",
            "pg_index.indrelid",
            "pg_type.oid",
            "pg_type.typbasetype",
            "pg_type.typtypmod",
            "true"
          ],
          "joinCount": 5
        }
      },
      {
        "kind": "function",
        "function": "logger/Logger::LogDevice#write",
        "labels": [
          "log"
        ]
      },
      {
        "kind": "sql",
        "sql": {
          "normalized_query": "RELEASE SAVEPOINT autopoint_1"
        },
        "analyzed_query": {
          "actions": [],
          "tables": [],
          "columns": [],
          "joinCount": 0
        }
      },
      {
        "kind": "function",
        "function": "logger/Logger::LogDevice#write",
        "labels": [
          "log"
        ]
      },
      {
        "kind": "sql",
        "sql": {
          "normalized_query": "SELECT \"scanner_checks\".\"description\", \"refs\", \"scanner_check_id\", \"identity_hash\", \"status\", \"message\", \"impact_category\" FROM \"finding_occurrences_v\" LEFT JOIN \"scanner_checks\" ON ((\"scanner_checks\".\"check_id\" = \"finding_occurrences_v\".\"scanner_check_id\") AND (\"scanner_checks\".\"job_id\" = \"finding_occurrences_v\".\"scanner_job_id\")) WHERE ((\"scanner_job_id\" = ?) AND (\"scanner_check_id\" = ?))"
        },
        "analyzed_query": {
          "actions": [
            "select"
          ],
          "tables": [
            "finding_occurrences_v",
            "scanner_checks"
          ],
          "columns": [
            "finding_occurrences_v.scanner_check_id",
            "finding_occurrences_v.scanner_job_id",
            "identity_hash",
            "impact_category",
            "message",
            "refs",
            "scanner_check_id",
            "scanner_checks.check_id",
            "scanner_checks.description",
            "scanner_checks.job_id",
            "scanner_job_id",
            "status"
          ],
          "joinCount": 1
        }
      },
      {
        "kind": "function",
        "function": "json/JSON::Ext::Parser#parse",
        "labels": [
          "format.json.parse",
          "deserialize.safe"
        ]
      }
    ]
  }
]